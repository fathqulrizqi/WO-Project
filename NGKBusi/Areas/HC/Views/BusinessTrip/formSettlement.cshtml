@using NGKBusi.Areas.HC.Models;
@using NGKBusi.Areas.HC.Controllers;
@using NGKBusi.Models;
@using System.Security.Claims;
@using Microsoft.AspNet.Identity;
@using FluentDateTime;
@using NGKBusi.Areas.FA.Controllers;
@{
    /**/

    ViewBag.Title = "Business Trip - Settlement";
    Layout = "~/Views/Shared/_Layout.cshtml";
    BusinessTripConnection bt = new BusinessTripConnection();
    DefaultConnection db = new DefaultConnection();
    var BT = ViewContext.Controller as BusinessTripController;
    var _currUser = ((ClaimsIdentity)User.Identity);
    var currUserID = _currUser.GetUserId();
    var currUser = ViewBag.CurrUser;
    var currUserFullName = _currUser.FindFirstValue("FullName");
    var currData = ViewBag.BusinessTrip;
    var currDataList = ViewBag.BusinessTripList;
    var currDetailList = ViewBag.BusinessTripDetailList;
    int currReqID = currData != null ? currData.ID : 0;
    string currNIK = Request["NIK"];
    string currReqNumber = Request["ReqNumber"];
    var currDataDetail = bt.HC_Business_Trip_Settlement.Where(w => w.Request_ID == currReqID && w.NIK == currNIK).FirstOrDefault();
    var currDataDetailCA = bt.HC_Business_Trip_CA.Where(w => w.Request_ID == currReqID && w.NIK == currNIK).FirstOrDefault();
    var currRequest = bt.HC_Business_Trip_Request.Where(w => w.Req_Number == currReqNumber).FirstOrDefault();
    var currTotalNights = (currRequest != null ? (int)(new DateTime(currRequest.Date_To.Value.Year, currRequest.Date_To.Value.Month, currRequest.Date_To.Value.Day) - new DateTime(currRequest.Date_From.Value.Year, currRequest.Date_From.Value.Month, currRequest.Date_From.Value.Day)).Days : 0);
    var currTotalDays = currTotalNights + 1;
    var currHalfDays = currRequest != null ? (currRequest.Date_From.Value.Hour >= 16 ? 1 : 0) + (currRequest.Date_To.Value.Hour < 16 ? 1 : 0) : 0;
    var currFullDays = currTotalDays - currHalfDays;
    //var currCurrency = currRequest != null && currRequest.Destination_Type.Contains("Overseas") ? "USD" : "IDR";
    var currCurrency = "IDR";

    BusinessTripController.StandardAmount standardAmount = BusinessTripController.getStandardAmount(currDataDetail?.Position, currRequest?.Destination_Type);
    string[] methodArray = currData?.Travel_Method.Split(new[] { "," }, StringSplitOptions.None);
    string[] needArray = currData?.Travel_Need.Split(new[] { "," }, StringSplitOptions.None);


    var currApproval = ViewBag.CurrApproval;
    var isAllowEdit = Request["addNew"] != null || (currDataDetail?.Approval == currApproval?.Levels && currDataDetail?.Approval_Sub == currApproval?.Levels_Sub) && currDataDetail?.NIK == currUserID || (currDataDetail?.NIK == currUserID && currDataDetail?.isRevise == true) || (currUserID == "629.01.13" && currDataDetail?.Approval == 1 && currDataDetail?.Approval_Sub == 0|| (currUserID == "629.01.13" && currDataDetail?.Approval == 1 && currDataDetail?.Approval_Sub == 0) || (currDataDetail?.HC_Business_Trip_Request?.Created_By == currUserID && currDataDetail?.Approval == 1 && currDataDetail?.Approval_Sub == 0)) ? true : false;
    var isAllowSign = currDataDetail?.Approval == currApproval?.Levels && currDataDetail?.Approval_Sub == currApproval?.Levels_Sub && currData.isReject != true ? true : false;
    if (isAllowSign == false && currDataDetail != null && (isAllowEdit == false || currUserID == "629.01.13"))
    {
        var checkSign = db.Approval_Master.Where(w => w.User_NIK == currUserID && w.Menu_Id == 75 && w.Document_Id == 2 && w.Levels == currDataDetail.Approval && w.Levels_Sub == currDataDetail.Approval_Sub && w.Dept_Code == currDataDetail.HC_Business_Trip_Request.Cost_ID).FirstOrDefault();

        isAllowSign = checkSign != null && currData.isReject != true ? true : false;
        isAllowEdit = checkSign != null && currData.isReject != true ? true : false;
    }

    //Budget List ==============================================
    var Hotel_Budget = currDataDetail?.Hotel_Budget ?? "";
    var budgetHotel = db.V_FA_Payment_Request_Budget_List.Where(w => w.Budget_No == Hotel_Budget).FirstOrDefault();

    var Daily_Budget = currDataDetail?.Daily_Budget ?? "";
    var budgetDaily = db.V_FA_Payment_Request_Budget_List.Where(w => w.Budget_No == Daily_Budget).FirstOrDefault();

    var Meals_Budget = currDataDetail?.Meals_Budget ?? "";
    var budgetMeals = db.V_FA_Payment_Request_Budget_List.Where(w => w.Budget_No == Meals_Budget).FirstOrDefault();

    var Flight_Budget = currDataDetail?.Flight_Budget ?? "";
    var budgetFlight = db.V_FA_Payment_Request_Budget_List.Where(w => w.Budget_No == Flight_Budget).FirstOrDefault();

    var RentCar_Budget = currDataDetail?.RentCar_Budget ?? "";
    var budgetRentCar = db.V_FA_Payment_Request_Budget_List.Where(w => w.Budget_No == RentCar_Budget).FirstOrDefault();

    var Entertaintment_Budget = currDataDetail?.Entertaintment_Budget ?? "";
    var budgetEntertaintment = db.V_FA_Payment_Request_Budget_List.Where(w => w.Budget_No == Entertaintment_Budget).FirstOrDefault();

    var Gasoline_Budget = currDataDetail?.Gasoline_Budget ?? "";
    var budgetGasoline = db.V_FA_Payment_Request_Budget_List.Where(w => w.Budget_No == Gasoline_Budget).FirstOrDefault();

    var Toll_Budget = currDataDetail?.Toll_Budget ?? "";
    var budgetToll = db.V_FA_Payment_Request_Budget_List.Where(w => w.Budget_No == Toll_Budget).FirstOrDefault();

    var Baggage_Budget = currDataDetail?.Baggage_Budget ?? "";
    var budgetBaggage = db.V_FA_Payment_Request_Budget_List.Where(w => w.Budget_No == Baggage_Budget).FirstOrDefault();

    var Taxi_Budget = currDataDetail?.Taxi_Budget ?? "";
    var budgetTaxi = db.V_FA_Payment_Request_Budget_List.Where(w => w.Budget_No == Taxi_Budget).FirstOrDefault();


            }
            @section cssHead{
    <link href="@Url.Content("~/Content/tablesorter/theme.bootstrap_4.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/tablesorter/jquery.tablesorter.pager.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Scripts/comment/css/jquery-comments.css")" rel="stylesheet" type="text/css" />
    <style type="text/css">
        .tblCADetail td {
            position: relative;
        }

        form label {
            font-weight: bold;
            text-align: right;
        }

        .tblCADetail td input, .tblCADetail td textarea {
            position: absolute;
            display: block;
            top: 0;
            left: 0;
            margin: 0;
            height: 100%;
            width: 100%;
            border: none;
            padding: 10px;
            box-sizing: border-box;
        }

        .tdReqAmount input[type='text'], .tdSettlementAmount input[type='text'], .tdGrandTotalExchangeRate input[type='text'] {
            text-align: right;
        }

        .tdReqDays input[type='text'] {
            text-align: center;
        }

        .tblCASchedule th, .tblCADetail thead th, .tblCABudget thead th {
            background-color: #00757f !important;
            color: white;
            text-align: center;
            vertical-align: middle;
        }

        .tblCADetail tbody th, .tblCABudget tbody th {
            color: black;
            text-align: right;
            vertical-align: top;
        }

        .tblCABudget tbody th {
            background-color: #0094a1 !important;
        }

        .tblCADetail tbody .thItems {
        color: black;
        text-align: right;
        vertical-align: middle;
    }

        .tdTotal, .tdDetailTotal, .tdDetailTotalCA, .tdVariance, .txtAmount, .txtDays {
            text-align: right;
        }

        .tblSign thead th {
            background-color: #1F4E78 !important;
            color: white;
        }

        .form-group {
            margin-bottom: 0;
        }

        .trGrandTotal {
            background-color: #f8b500 !important;
            text-align: right;
        }

        .ifileDelete {
            cursor: pointer;
            color: dimgrey;
        }

            .ifileDelete:hover {
                opacity: .75;
            }

        .select2-container--default .select2-results__option[aria-disabled=true] {
            display: none;
        }

        .trBlackTop th, .trBlackTop td {
        border-top-color: black !important;
        border-top-width: 2px !important;
    }

        .trBlackBottom th, .trBlackBottom td {
        border-bottom-color: black !important;
        border-bottom-width: 2px !important;
    }

        .trHotel .thMainItems {
            background-color: rgb(0, 117, 127) !important;
        }

        .trHotel .thItems {
            background-color: rgba(0, 117, 127,.5) !important;
        }

        .trMeals .thMainItems {
            background-color: rgb(0, 147, 139) !important;
        }

        .trMeals .thItems {
            background-color: rgba(0, 147, 139,.5) !important;
        }

        .trDaily .thMainItems {
            background-color: rgb(58, 176, 140) !important;
        }

        .trDaily .thItems {
            background-color: rgba(58, 176, 140,.5) !important;
        }

        .trTransport .thMainItems {
            background-color: rgb(115, 204, 132) !important;
        }

        .trTransport .thItems {
            background-color: rgba(115, 204, 132,.5) !important;
        }

        .trMiscellanous .thMainItems {
            background-color: rgb(178, 228, 120) !important;
        }

        .trMiscellanous .thItems {
            background-color: rgba(178, 228, 120, .5) !important;
        }

        @@media print {
            .divCA, .tblSign {
            font-size: 1.7em !important;
        }
    }
    </style>
}

@section scriptHead{
    <script src="@Url.Content("~/Scripts/accounting.min.js")"></script>
    <script src="@Url.Content("~/Scripts/printThis/printThis.js")"></script>
    <script src="@Url.Content("~/Scripts/tablesorter/jquery.tablesorter.combined.js")"></script>
    <script src="@Url.Content("~/Scripts/tablesorter/extras/jquery.tablesorter.pager.min.js")"></script>
    <script src="@Url.Content("~/Scripts/comment/js/jquery-comments.min.js")"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var currMoneySymbol = $("#hfCurrSymbol").val();
            var currTrigger = $("#hfCurrTrigger").val();
            var currPrecision = $("#hfCurrPrecision").val();
            $(document).on(currTrigger, ".tdReqAmount input[type='text']", function () {
                var selection = window.getSelection().toString();
                if (selection !== '') {
                    return;
                }
                // When the arrow keys are pressed, abort.
                if ($.inArray(event.keyCode, [38, 40, 37, 39, 188, 190]) !== -1) {
                    return;
                }

                var $this = $(this);
                var getDays = $(this).closest("tr").find(".tdReqDays input[type='text']").val() || 0;
                $(this).closest("tr").find(".tdCAAmount").text(accounting.formatMoney(accounting.unformat($this.val()) * getDays, currMoneySymbol, currPrecision));
                // Get the value.
                var input = $this.val().replace(/(?!\.)\D/g, "").replace(/(?<=\..*)\./g, "").replace(/(?<=\.\d\d).*/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                $this.val(input);
                //$(this).parent().find(".txtAllocationAmountHolder").val(accounting.unformat(input));
                totalAlloc();
            });
            $(document).on(currTrigger, ".tdReqDays input[type='text']", function () {
                var $this = $(this);
                var getAmount = $(this).closest("tr").find(".tdReqAmount input[type='text']").val() || 0;
                $(this).closest("tr").find(".tdCAAmount").text(accounting.formatMoney(accounting.unformat(getAmount) * $this.val(), currMoneySymbol, currPrecision));
                totalAlloc();
            });

            function totalAlloc() {
                var totalAllocation = 0;
                $(".tdCAAmount").each(function () {
                    totalAllocation += accounting.unformat($(this).text()) || 0;
                });
                $(".tdCAAmountTotal").text(accounting.formatMoney(totalAllocation, currMoneySymbol, currPrecision));
        }

            $("#selLevel").change(function () {
            var currVal = $(this).val();
                $.ajax({
            url: "/NGKBusi/HC/CashAdvance/getStandardAmount",
                    method: "POST",
                    tryCount: 0,
                    tryLimit: 3,
                    data: {
                level: currVal
                    }, success: function (data) {
                        $(".trHotel .tdReqAmount input[type='text']").val(accounting.formatMoney(data.hotel, currMoneySymbol, currPrecision)).trigger(currTrigger);
                        $(".trDaily .tdReqAmount input[type='text']").val(accounting.formatMoney(data.daily, currMoneySymbol, currPrecision)).trigger(currTrigger);
                        $(".trMealsLunch .tdReqAmount input[type='text']").val(accounting.formatMoney(data.meals, currMoneySymbol, currPrecision)).trigger(currTrigger);
                    // currCTR.LoadingOverlay("hide");
                }, error: function (xhr, textStatus, errorThrown) {
                    if (textStatus === "timeout") {
                        this.tryCount++;
                        if (this.tryCount <= this.tryLimit) {
                                $.ajax(this);
                            return;
                        }
                    }
                    //currCTR.LoadingOverlay("hide");
                    alert("Error Occurred, Please Try Again.");
                }
            });
        });

            $(".txtAmount").each(function () {
            //$(this).val(accounting.formatMoney($(this).val(), currMoneySymbol));
        });
            $(".tdTotal,.tdDetailTotal,.tdVariance,.tdDetailTotalCA").each(function () {
                $(this).text(accounting.formatMoney($(this).text(), currMoneySymbol, currPrecision));
        });
            $(document).on(currTrigger, ".txtAmount,.txtDays", function () {
            if ($(this).hasClass("txtDays")) {
                    $(this).val(accounting.formatNumber($(this).val()));
            } else {
                    $(this).val(accounting.formatMoney(accounting.unformat($(this).val()), currMoneySymbol, currPrecision));
            }
            var currTR = $(this).closest("tr");
            var amount = accounting.unformat(currTR.find(".txtAmount").val()) || 0;
            var totalAmount = 0;
            var totalAmountCA = 0;
            var days = currTR.find(".txtDays").val() || 0;
            currTR.find(".txtDetailTotal").val(amount * days);
            currTR.find(".tdDetailTotal").text(accounting.formatMoney(amount * days, currMoneySymbol, currPrecision));
                $(this).closest("tbody").find("." + currTR.attr("class").split(' ')[0]).each(function () {
                totalAmount += parseFloat(accounting.unformat($(this).find(".txtDetailTotal").val())) || 0;
                totalAmountCA += parseFloat(accounting.unformat($(this).find(".tdDetailTotalCA").text())) || 0;
            });

                $(this).closest("tbody").find("." + currTR.attr("class").split(' ')[0]).find(".txtTotal").val(totalAmount);
                $(this).closest("tbody").find("." + currTR.attr("class").split(' ')[0]).find(".tdTotal").text(accounting.formatMoney(totalAmount, currMoneySymbol, currPrecision));
                $(this).closest("tbody").find("." + currTR.attr("class").split(' ')[0]).find(".tdVariance").text(accounting.formatMoney(totalAmount - totalAmountCA, currMoneySymbol, currPrecision));

            var grandTotalAmount = 0;
            var grandTotalCAAmount = 0;
            var grandTotalVarianceAmount = 0;
                $(this).closest("tbody").find(".txtDetailTotal").each(function () {
                grandTotalAmount += parseFloat($(this).val()) || 0
                });
                $(this).closest("tbody").find(".tdDetailTotalCA").each(function () {
                grandTotalCAAmount += parseFloat(accounting.unformat($(this).text())) || 0
                });
                $(this).closest("tbody").find(".tdVariance").each(function () {
                grandTotalVarianceAmount += parseFloat(accounting.unformat($(this).text())) || 0
                });
                $('.tdGrandTotal').text(accounting.formatMoney(grandTotalAmount, currMoneySymbol, currPrecision));
                $('.tdGrandTotalCA').text(accounting.formatMoney(grandTotalCAAmount, currMoneySymbol, currPrecision));
                $('.tdGrandTotalVariance').text(accounting.formatMoney(grandTotalVarianceAmount, currMoneySymbol, currPrecision));
            calculateExchangeRate();
        });
            $(".txtAmount,.txtDays").trigger(currTrigger); //To Trigger Keyup Function
            $(".btnSettlementSave").click(function () {
                $(".txtAmount,.txtExchangeRate").each(function () {
                    $(this).val(accounting.unformat($(this).val()));
            });
        });
            $(".divCA input").click(function () {
                $(this).select();
        });

        var entityMap = {
            '&': '&amp;',
                '<': '&lt;',
                '>': '&gt;',
                '"': '&quot;',
                "'": '&#39;',
                '/': '&#x2F;',
                '`': '&#x60;',
                '=': '&#x3D;'
            };

        function escapeHtml(string) {
            return String(string).replace(/[&<>"'`=\/]/g, function (s) {
                    return entityMap[s];
        });
    }
            if ($(".ulReportFiles").length > 0) {
                GetSettlementAttachment($("#hfReportExpenses").val(), $("#hfReportReqNumber").val(), $("#hfReportSettlementID").val(), ".ulReportFiles");
            }
            $(".btnAttachment").click(function (e) {
        var expenses = $(this).data("expenses");
        var reqNumber = $("#hfReqNumber").val();
        var settlementID = $("#hfSettlementID").val();
                $("#hfexpenses").val(expenses);
                $(".mdlAttachment .modal-title").text(expenses);
        GetSettlementAttachment(expenses, reqNumber, settlementID, ".ulFiles");

        e.preventDefault();
    });

            function GetSettlementAttachment(expenses, reqNumber, settlementID, ulClass) {
        var isAllowEdit = $("#hfAllowEdit").val();
                $.ajax({
        type: "POST",
                    url: "/NGKBusi/HC/BusinessTrip/getSettlementAttachment",
                    data: {
            iExpenses: expenses,
                        iReqNumber: reqNumber,
                        iSettlementID: settlementID
                    },
                    success: function (data) {
                var liFiles = "";
                        $(ulClass).empty();
                        $.each(data.files, function (k, v) {
                    switch (v.ext) {
                        case ".doc":
                        case ".docx":
                            liFiles += "<li style = 'list-style: none; '><a href='" + window.location.origin + "/NGKbusi/files/HC/BusinessTrip/Settlement/" + reqNumber + "/" + settlementID + "/" + encodeURIComponent(v.filename) + "' target='_blank'><i class='fa fa-file-word' style='color: blue; '></i> " + v.filename + "</a><i data-id='" + v.id + "' class='ifileDelete fa fa-times ml-2'></i></li >";
                            break;
                        case ".xls":
                        case ".xlsx":
                        case ".xlsm":
                        case ".csv":
                            liFiles += "<li style = 'list-style: none; '><a href='" + window.location.origin + "/NGKbusi/files/HC/BusinessTrip/Settlement/" + reqNumber + "/" + settlementID + "/" + encodeURIComponent(v.filename) + "' target='_blank'><i class='fa fa-file-excel' style='color: green; '></i> " + v.filename + "</a><i data-id='" + v.id + "' class='ifileDelete fa fa-times ml-2'></i></li>";
                            break;
                        case ".pdf":
                            liFiles += "<li style = 'list-style: none; '><a href='" + window.location.origin + "/NGKbusi/files/HC/BusinessTrip/Settlement/" + reqNumber + "/" + settlementID + "/" + encodeURIComponent(v.filename) + "' target='_blank'><i class='fa fa-file-pdf' style='color: red; '></i> " + v.filename + "</a><i data-id='" + v.id + "' class='ifileDelete fa fa-times ml-2'></i></li >";
                            break;
                        case ".ppt":
                        case ".pptx":
                            liFiles += "<li style = 'list-style: none; '><a href='" + window.location.origin + "/NGKbusi/files/HC/BusinessTrip/Settlement/" + reqNumber + "/" + settlementID + "/" + encodeURIComponent(v.filename) + "' target='_blank'><i class='fa fa-file-powerpoint' style='color: chocolate; '></i> " + v.filename + "</a><i data-id='" + v.id + "' class='ifileDelete fa fa-times ml-2'></i></li >";
                            break;
                        case ".jpg":
                        case ".jpeg":
                        case ".png":
                        case ".gif":
                            liFiles += "<li style = 'list-style: none; '><a href='" + window.location.origin + "/NGKbusi/files/HC/BusinessTrip/Settlement/" + reqNumber + "/" + settlementID + "/" + encodeURIComponent(v.filename) + "' target='_blank'><i class='fa fa-file-image' style='color: blue; '></i> " + v.filename + "</a><i data-id='" + v.id + "' class='ifileDelete fa fa-times ml-2'></i></li >";
                            break;
                    }
                });
                        $(ulClass).append(liFiles);
                if ($("li", ulClass).length < 1) {
                    liFiles = "<li style = 'list-style: none; '>-</li>";
                            $(ulClass).append(liFiles);
                }
                if (ulClass == ".ulFiles") {
                            $(".mdlAttachment").modal();
                }
                if (ulClass == ".ulReportFiles" && data.files.length > 0 || $("#hfReportLoginNIK").val() == "629.01.13") {
                            $("#fileTripReport").prop("required", false);
                } else {
                            $("#fileTripReport").prop("required", true);
                }

                if (!isAllowEdit) {
                            $(".ifileDelete").hide();
                }
            }, error: function () {
                alert("Error Occurred, Please try again !");
            }
        });
    }

            $('.ulFiles,.ulReportFiles').on('click', '.ifileDelete', function () {
        var currLi = $(this).closest("li");
        var currID = $(this).data("id");
        if (confirm("Are you sure want to delete this file ?")) {
                    $.ajax({
            type: "POST",
                        url: "/NGKBusi/HC/BusinessTrip/deleteSettlementAttachment",
                        data: {
                iID: currID
                        },
                        success: function (data) {
                    currLi.remove();
                }, error: function () {
                    alert("Error Occurred, Please try again !");
                }
            });
        }
    });
            $(".btnPrint").click(function () {
                $(".divBTSettlement").printThis({
        importCSS: true,
                    importStyle: true,
                    printContainer: true
                });
    });

            $(".tblSettlementRequestList").tablesorter({
    theme: "bootstrap",
                widthFixed: true,
                widgets: ["filter", "columns", "stickyHeaders"],

                widgetOptions: {
        columns: ["primary", "secondary", "tertiary"],
                    filter_cssFilter: [
                        'form-control',
                        'form-control',
                        'form-control',
                        'form-control',
                        'form-control',
                        'form-control',
                        'form-control',
                        'form-control'
                    ], filter_defaultFilter: {
                // "{query} - a single or double quote signals an exact filter search
                3: '"{q}',
                        5: '"{q}',
                        7: '"{q}'
                    }
        }
    }).tablesorterPager({
    cssGoto: '.pagenum',
                container: $(".ts-pager"),
                output: '{startRow} to {endRow} ({totalRows})',
                size: '10'
            });


            $("#selBTFilterStatus,#selBTFilterYear,#selBTFilterLevel").change(function () {
                $(".btnBTFilter").click();
    });

            insertEVoucherDetails();
    function insertEVoucherDetails() {
        var currDetails = [];
        var currExchangeRate = accounting.unformat($(".tdGrandTotalExchangeRate input[type='text']").val());
                $('.tdTotalEVoucher').each(function () {
            var currTotal = accounting.unformat($(this).text()) * currExchangeRate;
            var currBudget = $(this).data("budget") == "|" ? "-" : $(this).data("budget");
            var currAllowance = $(this).data("allowance");
            if (currTotal > 0) {
                currDetails.push(currTotal + "||" + currBudget + "||" + currAllowance);
            }
        });
        var currLink = $(".btnGenerateEVoucher").attr("href");
        $(".btnGenerateEVoucher").attr("href", currLink + "&details=" + encodeURIComponent(currDetails.join(",")));
    }


            $(document).on("keydown", "form", function (event) {
        return event.key != "Enter";
    });
            $(document).on("keydown", "input[type='text']", function (event) {
        if (event.key == "Enter") {
                    $(this).trigger(currTrigger);
        }
    });

            $(document).on("blur", ".tdGrandTotalExchangeRate input[type='text']", function () {
        var currExchangeRate = accounting.unformat($(this).val());
                $(this).val(accounting.formatMoney(currExchangeRate, "Rp"));
        calculateExchangeRate();
    });
            $(".tdGrandTotalExchangeRate input[type='text']").blur();
    function calculateExchangeRate() {
        var currExchangeRate = accounting.unformat($(".tdGrandTotalExchangeRate input[type='text']").val());
        var currExchangeRateCA = accounting.unformat($(".tdGrandTotalExchangeRate").data("exchangerateca"));
        var currTotal = accounting.unformat($(".tdGrandTotal").text());
        var currExchange = accounting.formatMoney(currExchangeRate * currTotal, "Rp");
                $(".tdGrandTotalExchange").text(currExchange);

        var currTotalCA = accounting.unformat($(".tdGrandTotalCA").text());
        var currExchangeCA = accounting.formatMoney(currExchangeRateCA * currTotalCA, "Rp");
        //var currExchangeCA = accounting.formatMoney(currExchangeRate * currTotalCA, "Rp");
                $(".tdGrandTotalExchangeCA").text(currExchangeCA);

        var currTotalVariance = accounting.unformat($(".tdGrandTotalVariance").text());
        //var currExchangeVariance = accounting.formatMoney(currExchangeRate * currTotalVariance, "Rp");
        var currExchangeVariance = accounting.formatMoney((currExchangeRate * currTotal) - (currExchangeRateCA * currTotalCA) , "Rp");
        $(".tdGrandTotalExchangeVariance").text(currExchangeVariance);
    }
            $('#QTComments').comments({
    enableNavigation: false,
                enablePinging: false,
                enableAttachments: false,
                enableUpvoting: false,
                timeFormatter: function (time) {
            return moment(time).format("MMMM D, YYYY [at] HH:mm");
        },
                postComment: function (commentJSON, success, error) {
            console.log("postComment");
            commentJSON["ReqNumber"] = $("#hfCurrReqNumber").val();
            commentJSON["ReqNIK"] = $("#hfCurrNIK").val();
            commentJSON["fullname"] = "@(currUserFullName)";
            commentJSON["nik"] = "@(currUserID)";// Create form data and append all other fields but attachments

            var formData = new FormData();
                    $.each(Object.keys(commentJSON),function (index, key) {
                if (key != 'attachments') {
                    var value = commentJSON[key];
                    formData.append(key, value);
                }
            });

            var attachmentsToBeCreated = commentJSON.attachments.filter(function (attachment) {
                return !attachment.id
                    });
                    $(attachmentsToBeCreated).each(function (index, attachment) {
                formData.append('attachments_to_be_created', attachment.file);
            });

                    $.ajax({
            type: 'post',
                        url: "/NGKBusi/HC/BusinessTrip/SettlementCommentAdd",
                        data: formData,
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (comment) {
                    success(comment)
                        },
                        error: error
                    });
            console.log(commentJSON);
        },
                putComment: function (commentJSON, success, error) {
            console.log("putComment");
            commentJSON["ReqNumber"] = $("#hfCurrReqNumber").val();
            commentJSON["ReqNIK"] = $("#hfCurrNIK").val();
            commentJSON["fullname"] = "@(currUserFullName)";
            commentJSON["nik"] = "@(currUserID)";

            var formData = new FormData();
                    $.each(Object.keys(commentJSON), function (index, key) {
                if (key != 'attachments') {
                    var value = commentJSON[key];
                    formData.append(key, value);
                }
            });

            var attachmentsToBeCreated = commentJSON.attachments.filter(function (attachment) {
                return !attachment.id
                    });
                    $(attachmentsToBeCreated).each(function (index, attachment) {
                formData.append('attachments_to_be_created', attachment.file);
            });

                    $.ajax({
            type: 'post',
                        url: "/NGKBusi/HC/BusinessTrip/SettlementCommentEdit",
                        data: formData,
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (comment) {
                    success(comment)
                        },
                        error: error
                    });
            console.log(commentJSON);
        },
                deleteComment: function (commentJSON, success, error) {
            console.log("deleteComment");
            commentJSON["ReqNumber"] = $("#hfCurrReqNumber").val();
            commentJSON["ReqNIK"] = $("#hfCurrNIK").val();
            console.log(commentJSON);
                    $.ajax({
            type: 'post',
                        url: "/NGKBusi/HC/BusinessTrip/SettlementCommentDelete",
                        data: commentJSON,
                        success: success,
                        error: error
                    });
        }, getComments: function (success, error) {
                    $.ajax({
            type: 'get',
                        url: "/NGKBusi/HC/BusinessTrip/SettlementCommentGet",
                        contentType: 'multipart/form-data',
                        data: {
                iReqNumber: $("#hfCurrReqNumber").val(),
                            iReqNIK: $("#hfCurrNIK").val(),
                            iNIK: "@(currUserID)"
                        },
                        success: function (commentsArray) {
                    success(commentsArray)
                        },
                        error: error
                    });
        }
    });
        });
    </script>
}
<h2>
    Business Trip - Settlement

    @if (Request["ReqNumber"] != null)
    {
        <a href="@Url.Action("formSettlement", "BusinessTrip", new { area = "HC" })" class="btn btn-success">Back to Settlement List</a><a href="@Url.Action("formRequest", "BusinessTrip", new { area = "HC", ReqNumber = Request["ReqNumber"] })" class="btn btn-primary ml-2">Go to Request Form</a>
        if (Request["NIK"] != null)
    {
            <button type="button" class="btn btn-warning btnPrint"><i class="fas fa-print"></i></button>
            if (currUserID == "629.01.13")
            {
                <a href="@Url.Action("NonPO", "PaymentRequest", new { area = "FA", addNew = "addNew", invNumber = Request["ReqNumber"] + "-" + currDataDetail.NIK, NIK = currDataDetail.NIK, currency = currCurrency, amountOfInvoice = (currDataDetailCA.Hotel_Total + currDataDetailCA.Meals_Total + currDataDetailCA.Daily_Total + currDataDetailCA.Transport_Total + currDataDetailCA.Misc_Total) * (currDataDetail?.Exchange_Rate ?? 1), paymentType = "Settlement", dueDate = DateTime.Now.AddBusinessDays(5).ToString("MM/dd/yyyy"), description = DateTime.Now.ToString("yyMM_") + "Clear Advance_" + currRequest.Destination + "_" + currRequest.Date_From?.ToString("dd MMM-") + currRequest?.Date_To?.ToString("dd MMM yyyy_") + currDataDetail.Name.Split(' ')[0], sectionTo = currRequest.Cost_ID + "|" + currRequest.Cost_Name, coa = currRequest.Destination_Type.Contains("Overseas") ? "7651103|Travel Expense-Oversea" : "7651102|Travel Expense-Domestic"})" target="_blank" class="btn btn-warning ml-2 btnGenerateEVoucher" onclick="return confirm('Are you sure want to create E-Voucher?')">Generate E-Voucher</a>
            }
        }
    }
    else
    {
        if (currUserID == "629.01.13")
        {
            <button id="btnSettlementApprovalReport" class="btn btn-info" data-toggle="modal" data-target="#mdlSettlementApprovalReport">Approval Report</button>
        }
    }
</h2>

<div class="modal fade" id="mdlSettlementApprovalReport" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form action="@Url.Action("settlementApprovalReport", "BusinessTrip", new { area = "HC" })" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Settlement Approval Report</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group row">
                        <label for="lblDept" class="col-2">Date :</label>
                        <div class="col-5">
                            <input type="text" name="iReportDateFrom" class="form-control dFrom" placeholder="From" required />
                        </div>
                        <div class="col-5">
                            <input type="text" name="iReportDateTo" class="form-control dTo" placeholder="To" required />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-secondary">Get Report</button>
                </div>
            </form>
        </div>
    </div>
</div>
<hr />
<div class="divBTFilter @(Request["ReqNumber"] == null ? "":"d-none")">
    <form action="@Url.Action("formSettlement", "BusinessTrip", new { area = "HC" })" method="post">
        <select id="selBTFilterYear" class="form-control" name="iBTFilterYear">
            <option value="">-Year-</option>
            @for (var i = 2023; i <= (DateTime.Now.Month == 12 ? DateTime.Now.AddYears(1).Year : DateTime.Now.Year); i++)
            {
                <option value="@(i)" @(ViewBag.currFilterYear == i.ToString() ? "Selected" : "")>@(i)</option>
            }
        </select>
        <select id="selBTFilterStatus" class="form-control" name="iBTFilterStatus">
            <option value="">-Status-</option>
            <option value="All" @(ViewBag.currFilterStatus == "All" ? "Selected" : "")>All</option>
            <option value="Signed" @(ViewBag.currFilterStatus == "Signed" ? "Selected" : "")>Signed</option>
            <option value="Open" @(ViewBag.currFilterStatus == "Open" ? "Selected" : "")>Open</option>
        </select>
        @if (((IEnumerable<dynamic>)ViewBag.PayUserLevelCheck).Count() > 1)
        {
            <select id="selBTFilterLevel" class="form-control" name="iBTFilterLevel">
                @foreach (var data in ((IEnumerable<dynamic>)ViewBag.PayUserLevelCheck).Select(s => new { Levels = s.Levels, Levels_Sub = s.Levels_Sub, Title = s.Title }).Distinct())
                {
                    <option value="@(data.Levels + "|" + data.Levels_Sub)" @(data.Levels + "|" + data.Levels_Sub == ViewBag.PayUserLevel + "|" + ViewBag.PayUserLevelSub ? "Selected" : "")>@(data.Title)</option>
                }
            </select>
        }
        <button type="submit" class="btnBTFilter" style="display:none;">Submit</button>
    </form>
</div>
<hr />
@if (Request["ReqNumber"] == null || Request["NIK"] == null)
    {
    <table class="table table-bordered tblSettlementRequestList">
        <thead>
            <tr>
                <th>Req Number</th>
                <th>NIK</th>
                <th>Date</th>
                <th>Destination</th>
                <th>Name</th>
                <th class="filter-select" data-placeholder="Select">Dept</th>
                <th class="filter-select" data-placeholder="Select">Status</th>
                <th class="filter-select" data-placeholder="Select">E-Voucher</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var data in currDetailList)
    {
        string invoiceNumber = data.HC_Business_Trip_Request.Req_Number + "-" + data.NIK;
        var Status = db.FA_Payment_Request_Non_PO.Where(w => w.Invoice_Number == invoiceNumber && w.Payment_Type == "Settlement").FirstOrDefault();
        var currIsReject = data?.isReject ?? false;
                <tr>
                    <td>@(data.HC_Business_Trip_Request.Req_Number)</td>
                    <td><a href="@Url.Action("formSettlement", "BusinessTrip", new { area = "HC", ReqNumber = data.HC_Business_Trip_Request.Req_Number, NIK = data.NIK, iBTFilterLevel = currApproval.Levels + "|" + currApproval.Levels_Sub })">@(data.NIK)</a></td>
                    <td>@(data.HC_Business_Trip_Request.Date_To.ToString("dd-MM-yyyy"))</td>
                    <td>@(data.HC_Business_Trip_Request.Destination)</td>
                    <td>@(data.Name)</td>
                    <td>@(data.Department)</td>
                    <td><span class="badge badge-@(BT.ApprovalStatus((int)data.Approval, (int)data.Approval_Sub, 3, 2, currIsReject))">@(BT.ApprovalStatus((int)data.Approval, (int)data.Approval_Sub, 2, 2, currIsReject))</span></td>
                    <td><span class="badge badge-@(Status != null ? "info":"warning")">@(Status != null ? PaymentRequestController.ApprovalStatus(Status.Approval, Status.Approval_Sub, Status.Is_Reject, Status.Amount_of_Invoice) : data.Approval >= 4 ? "Not Created" : "Waiting for Settlement Approval")</span></td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <th colspan="8" class="ts-pager">
                    <div class="form-inline">
                        <div class="btn-group btn-group-sm mx-1" role="group">
                            <button type="button" class="btn btn-secondary first" title="first">⇤</button>
                            <button type="button" class="btn btn-secondary prev" title="previous">←</button>
                        </div>
                        <span class="pagedisplay"></span>
                        <div class="btn-group btn-group-sm mx-1" role="group">
                            <button type="button" class="btn btn-secondary next" title="next">→</button>
                            <button type="button" class="btn btn-secondary last" title="last">⇥</button>
                        </div>
                        <select class="form-control-sm custom-select px-1 pagesize" title="Select page size">
                            <option selected="selected" value="10">10</option>
                            <option value="20">20</option>
                            <option value="30">30</option>
                            <option value="all">All Rows</option>
                        </select>
                        <select class="form-control-sm custom-select px-4 mx-1 pagenum" title="Select page number"></select>
                    </div>
                </th>
            </tr>
        </tfoot>
    </table>
}
else
{
    <hr />
    <div class="card border-secondary shadow-sm divBTSettlement">
        <div class="card-body">
            <table id="tblHeader" border="1" style="width:100%;">
                <tr>
                    <td rowspan="4" class="text-center" style="width:235px">
                        <img src="~/Images/niterra-logo.jpg" class="img-fluid p-3" />
                    </td>
                    <td rowspan="4" class="text-center"><h3>FORMULIR INTEGRASI</h3><h3>BUSINESS TRAVEL SETTLEMENT</h3></td>
                    <td style="width:150px">No. Dok</td>
                    <td style="width:150px">PK-GA-ALL-22/F2</td>
                </tr>
                <tr>
                    <td>Revisi</td>
                    <td>01</td>
                </tr>
                <tr>
                    <td>Tanggal</td>
                    <td>1 Agustus 2017</td>
                </tr>
                <tr>
                    <td>Halaman</td>
                    <td>1 of 1</td>
                </tr>
            </table>

            <form action="@Url.Action((currDataDetail != null ? "SettlementEdit" : "SettlementAdd"), "BusinessTrip", new { area = "HC" })" method="post" enctype="multipart/form-data">
                <div class="container-fluid mt-5 divCA">
                    <div class="row">
                        <div class="col-6">
                            <div class="form-group row">
                                <label for="lblNp" class="col-3">No :</label>
                                <div class="col-9">
                                    <a href="@Url.Action("formRequest", "BusinessTrip", new { area = "HC", ReqNumber = currData.Req_Number })" target="_blank">@(currData.Req_Number)</a>
                                    <input type="hidden" id="hfCurrDetailID" name="iCurrDetailID" value="@(currDataDetail.ID)" />
                                    <input type="hidden" id="hfCurrReqNumber" name="iCurrReqNumber" value="@(currData.Req_Number)" />
                                    <input type="hidden" id="hfCurrNIK" name="iCurrNIK" value="@(currDataDetail.NIK)" />
                                    <input type="hidden" id="hfCurrSymbol" name="iCurrSymbol" value="@(currData.Destination_Type == "Overseas Route A (Asean)" || currData.Destination_Type == "Overseas Route B (Outside Asean)" ? "$" : "Rp")" />
                                    <input type="hidden" id="hfCurrTrigger" name="iCurrTrigger" value="@(currData.Destination_Type?.Contains("Overseas") == true ? "blur" : "keyup")" />
                                    <input type="hidden" id="hfCurrPrecision" name="iCurrPrecision" value="@(currData.Destination_Type?.Contains("Overseas") == true ? 2 : 0)" />
                                    <input type="hidden" id="hfAllowEdit" value="@(isAllowEdit)" />

                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="lblName" class="col-3">Name :</label>
                                <div class="col-9">
                                    @(currDataDetail?.Name)
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="lblNIK" class="col-3">Emp.ID :</label>
                                <div class="col-9">
                                    @(currDataDetail?.NIK)
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="lblTransportBy" class="col-3">Transport By :</label>
                                <div class="col-9">
                                    @(currData?.Travel_Method_By)
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group row">
                                <label for="lblDept" class="col-3">Dept/Sect :</label>
                                <div class="col-9">
                                    @(currDataDetail?.Department)
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="lblPosition" class="col-3">Position :</label>
                                <div class="col-9">
                                    @(currDataDetail?.Position)
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="lblPosition" class="col-3">Request Date :</label>
                                <div class="col-9">
                                    @(currData?.Created_At.ToString("dd-MMM-yyyy"))
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="lblPosition" class="col-3">Business Trip Report :</label>
                                <div class="col-9">
                                    <input id="hfReportExpenses" name="iExpenses" type="hidden" value="Report" />
                                    <input id="hfReportReqNumber" name="iReqNumber" type="hidden" value="@(Request["ReqNumber"])" />
                                    <input id="hfReportSettlementID" name="iSettlementID" type="hidden" value="@(currDataDetail?.ID)" />
                                    <input id="hfReportNIK" name="iNIK" type="hidden" value="@(Request["NIK"])" />
                                    <input id="hfReportLoginNIK" name="iLoginNIK" type="hidden" value="@(currUserID)" />
                                    <input id="fileTripReport" type="file" name="iFiles" multiple="multiple" class="@(isAllowEdit ? "":"d-none")" @(isAllowEdit && currDataDetail.Approval == 1 && currDataDetail.Approval_Sub == 0 ? "required" : "") />
                                    <ul class="ulReportFiles pl-0">-</ul>
                                </div>
                            </div>
                        </div>
                    </div>

                    <table class="table table-bordered tblCASchedule">
                        <tbody>
                            <tr>
                                <th>Date</th>
                                <th>No of Days</th>
                                <th>Destination (City)</th>
                            </tr>
                            <tr>
                                <td class="text-center">
                                    @(currData?.Date_From?.ToString("dd-MMM-yyyy (HH:mm)") + " to " + currData?.Date_To?.ToString("dd-MMM-yyyy (HH:mm)"))
                                </td>
                                <td class="text-center">
                                    @(currTotalDays + " Days")
                                </td>
                                <td class="text-center">
                                    @(currData?.Destination)
                                </td>
                            </tr>
                            <tr>
                                <th colspan="2">Activity</th>
                                <th>Company to be visited</th>
                            </tr>
                            <tr>
                                <td colspan="2" class="text-center">
                                    @(currData?.Purpose)
                                </td>
                                <td class="text-center">
                                    @(currData?.Visited_To)
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <table class="table table-bordered tblCADetail">
                        <thead>
                            <tr>
                                <th rowspan="2" colspan="2">
                                    Detail of Expenses
                                    @if (currData != null && currData.Created_At <= new DateTime(2024, 1, 16))
                                    {
                                        <button class="btn btn-sm btn-primary btnAttachment" data-expenses="Expenses">
                                            <i class="fas fa-file-alt"></i>
                                        </button>
                                    }
                                </th>
                                <th colspan="3">Settlement</th>
                                <th colspan="2">Total Settlement</th>
                                <th rowspan="2">Total CA</th>
                                <th rowspan="2">Variant</th>
                            </tr>
                            <tr>
                                <th>Amount</th>
                                <th>X</th>
                                <th>Days/Qty</th>
                                <th>Sub Total</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @*Hotel !===================================================*@
                            @{
                                var detailHotel = bt.HC_Business_Trip_Settlement_Detail.Where(w => w.CA_ID == currDataDetail.ID && w.NIK == currDataDetail.NIK && w.Item_Type == "Hotel").ToList();
                            }
                            <tr class="trHotel trBlackTop trBlackBottom">
                                <th class="align-middle thMainItems">
                                    Hotel
                                    <button class="btn btn-sm btn-primary btnAttachment" data-expenses="Hotel">
                                        <i class="fas fa-file-alt"></i>
                                    </button>
                                </th>
                                <th class="thItems">
                                </th>
                                <td>
                                    <input type="text" name="iAmount[]" class="form-control txtAmount" placeholder="Amount" value="@(detailHotel.Where(w => w.Item == "Hotel").FirstOrDefault()?.CA_Amount ?? 0)" @(isAllowEdit ? "" : "disabled") />
                                    <input type="hidden" name="iDetailItemType[]" class="form-control txtDetailItem" value="Hotel" />
                                    <input type="hidden" name="iDetailItem[]" class="form-control txtDetailItem" value="Hotel" />
                                    <input type="hidden" name="iDetailTotal[]" class="form-control txtDetailTotal" value="@(detailHotel.Where(w => w.Item == "Hotel").FirstOrDefault()?.CA_Total ?? 0)" />
                                    <input type="hidden" name="iHotelTotal" class="form-control txtTotal" value="@(currDataDetail?.Hotel_Total ?? 0)" />
                                </td>
                                <td class="text-center">X</td>
                                <td><input type="text" name="iDays[]" class="form-control txtDays" placeholder="Days" value="@(detailHotel.Where(w => w.Item == "Hotel").FirstOrDefault()?.CA_Days ?? currTotalNights)" @(isAllowEdit ? "" : "disabled") /></td>
                                <td class="tdDetailTotal">@(detailHotel.Where(w => w.Item == "Hotel").FirstOrDefault()?.CA_Total ?? 0)</td>
                                <td class="tdTotal tdTotalEVoucher" data-budget="@(budgetHotel?.Budget_No + "|" + budgetHotel?.Description)" data-allowance="@(DateTime.Now.ToString("yyMM_") + "Hotel_" + currRequest.Destination + "_" + currRequest.Date_From?.ToString("dd MMM-") + currRequest?.Date_To?.ToString("dd MMM yyyy_") + currDataDetail.Name.Split(' ')[0])">@(currDataDetail?.Hotel_Total ?? 0)</td>
                                <td class="tdDetailTotalCA">@(currDataDetailCA?.Hotel_Total ?? 0)</td>
                                <td class="tdVariance">@(currDataDetail?.Hotel_Total - currDataDetailCA?.Hotel_Total ?? 0)</td>
                            </tr>

                            @*Hotel ===================================================!*@
                            @*Meal !===================================================*@
                            @{
                                var detailMeals = bt.HC_Business_Trip_Settlement_Detail.Where(w => w.CA_ID == currDataDetail.ID && w.NIK == currDataDetail.NIK && w.Item_Type == "Meal Allowance").ToList();
                            }
                            <tr class="trMeals trBlackTop">
                                <th class="thMainItems" rowspan="3">
                                    Meal Allowance
                                    <button class="btn btn-sm btn-primary btnAttachment" data-expenses="Meals">
                                        <i class="fas fa-file-alt"></i>
                                    </button>
                                </th>
                                <th class="thItems">
                                    Breakfast
                                    <input type="hidden" name="iDetailItemType[]" class="form-control txtDetailItem" value="Meal Allowance" />
                                    <input type="hidden" name="iDetailItem[]" class="form-control txtDetailItem" value="Breakfast" />
                                </th>
                                <td>
                                    <input type="text" name="iAmount[]" class="form-control txtAmount" placeholder="Amount" value="@(detailMeals.Where(w => w.Item == "Breakfast").FirstOrDefault()?.CA_Amount ?? 0)" @(isAllowEdit ? "" : "disabled") />
                                    <input type="hidden" name="iDetailTotal[]" class="form-control txtDetailTotal" value="@(detailMeals.Where(w => w.Item == "Breakfast").FirstOrDefault()?.CA_Total ?? 0)" />
                                    <input type="hidden" name="iMealsTotal" class="form-control txtTotal" value="@(currDataDetail?.Meals_Total ?? 0)" />
                                </td>
                                <td class="text-center">X</td>
                                <td><input type="text" name="iDays[]" class="form-control txtDays" placeholder="Days" value="@(detailMeals.Where(w => w.Item == "Breakfast").FirstOrDefault()?.CA_Days ?? currTotalDays)" @(isAllowEdit ? "" : "disabled") /></td>
                                <td class="tdDetailTotal">@(detailMeals.Where(w => w.Item == "Breakfast").FirstOrDefault()?.CA_Total ?? 0)</td>
                                <td rowspan="3" class="tdTotal tdTotalEVoucher" data-budget="@(budgetMeals?.Budget_No + "|" + budgetMeals?.Description)" data-allowance="@(DateTime.Now.ToString("yyMM_") + "Meals_" + currRequest.Destination + "_" + currRequest.Date_From?.ToString("dd MMM-") + currRequest?.Date_To?.ToString("dd MMM yyyy_") + currDataDetail.Name.Split(' ')[0])">@(currDataDetail?.Meals_Total ?? 0)</td>
                                <td rowspan="3" class="tdDetailTotalCA">@(currDataDetailCA?.Meals_Total ?? 0)</td>
                                <td rowspan="3" class="tdVariance">@(currDataDetail?.Meals_Total - currDataDetailCA?.Meals_Total ?? 0)</td>
                            </tr>
                            <tr class="trMeals">
                                <th class="thItems">
                                    Lunch
                                    <input type="hidden" name="iDetailItemType[]" class="form-control txtDetailItem" value="Meal Allowance" />
                                    <input type="hidden" name="iDetailItem[]" class="form-control txtDetailItem" value="Lunch" />
                                </th>
                                <td>
                                    <input type="text" name="iAmount[]" class="form-control txtAmount" placeholder="Amount" value="@(detailMeals.Where(w => w.Item == "Lunch").FirstOrDefault()?.CA_Amount ?? 0)" @(isAllowEdit ? "" : "disabled") />
                                    <input type="hidden" name="iDetailTotal[]" class="form-control txtDetailTotal" value="@(detailMeals.Where(w => w.Item == "Lunch").FirstOrDefault()?.CA_Total ?? 0)" />
                                </td>
                                <td class="text-center">X</td>
                                <td><input type="text" name="iDays[]" class="form-control txtDays" placeholder="Days" value="@(detailMeals.Where(w => w.Item == "Lunch").FirstOrDefault()?.CA_Days ??currTotalDays)" @(isAllowEdit ? "" : "disabled") /></td>
                                <td class="tdDetailTotal">@(detailMeals.Where(w => w.Item == "Lunch").FirstOrDefault()?.CA_Total ?? 0)</td>
                            </tr>
                            <tr class="trMeals trBlackBottom">
                                <th class="thItems">
                                    Dinner
                                    <input type="hidden" name="iDetailItemType[]" class="form-control txtDetailItem" value="Meal Allowance" />
                                    <input type="hidden" name="iDetailItem[]" class="form-control" value="Dinner" />
                                </th>
                                <td>
                                    <input type="text" name="iAmount[]" class="form-control txtAmount" placeholder="Amount" value="@(detailMeals.Where(w => w.Item == "Dinner").FirstOrDefault()?.CA_Amount ?? 0)" @(isAllowEdit ? "" : "disabled") />
                                    <input type="hidden" name="iDetailTotal[]" class="form-control txtDetailTotal" value="@(detailMeals.Where(w => w.Item == "Dinner").FirstOrDefault()?.CA_Total ?? 0)" />
                                </td>
                                <td class="text-center">X</td>
                                <td><input type="text" name="iDays[]" class="form-control txtDays" placeholder="Days" value="@(detailMeals.Where(w => w.Item == "Dinner").FirstOrDefault()?.CA_Days ?? currTotalDays)" @(isAllowEdit ? "" : "disabled") /></td>
                                <td class="tdDetailTotal">@(detailMeals.Where(w => w.Item == "Dinner").FirstOrDefault()?.CA_Total ?? 0)</td>
                            </tr>
                            @*Meal ===================================================!*@
                            @*Daily !===================================================*@
                            @{
                                var detailDaily = bt.HC_Business_Trip_Settlement_Detail.Where(w => w.CA_ID == currDataDetail.ID && w.NIK == currDataDetail.NIK && w.Item_Type == "Daily Allowance").ToList();
                            }
                            <tr class="trDaily trBlackTop">
                                <th class="thMainItems" rowspan="2">
                                    Daily Allowance
                                    <button class="btn btn-sm btn-primary btnAttachment" data-expenses="Daily">
                                        <i class="fas fa-file-alt"></i>
                                    </button>
                                </th>
                                <th class="thItems">
                                    Full Day
                                    <input type="hidden" name="iDetailItemType[]" class="form-control txtDetailItem" value="Daily Allowance" />
                                    <input type="hidden" name="iDetailItem[]" class="form-control txtDetailItem" value="Full Day" />
                                </th>
                                <td>
                                    <input type="text" name="iAmount[]" class="form-control txtAmount" placeholder="Amount" value="@(detailDaily.Where(w => w.Item == "Full Day").FirstOrDefault()?.CA_Amount ?? 0)" @(isAllowEdit ? "" : "disabled") />
                                    <input type="hidden" name="iDetailTotal[]" class="form-control txtDetailTotal" value="@(detailDaily.Where(w => w.Item == "Full Day").FirstOrDefault()?.CA_Total ?? 0)" />
                                    <input type="hidden" name="iDailyTotal" class="form-control txtTotal" value="@(currDataDetail?.Daily_Total ?? 0)" />
                                </td>
                                <td class="text-center">X</td>
                                <td><input type="text" name="iDays[]" class="form-control txtDays" placeholder="Days" value="@(detailDaily.Where(w => w.Item == "Full Day").FirstOrDefault()?.CA_Days ?? currFullDays)" @(isAllowEdit ? "" : "disabled") /></td>
                                <td class="tdDetailTotal">@(detailDaily.Where(w => w.Item == "Full Day").FirstOrDefault()?.CA_Total ?? 0)</td>
                                <td rowspan="2" class="tdTotal tdTotalEVoucher" data-budget="@(budgetDaily?.Budget_No + "|" + budgetDaily?.Description)" data-allowance="@(DateTime.Now.ToString("yyMM_") + "Daily Allowance_" + currRequest.Destination + "_" + currRequest.Date_From?.ToString("dd MMM-") + currRequest?.Date_To?.ToString("dd MMM yyyy_") + currDataDetail.Name.Split(' ')[0])">@(currDataDetail?.Daily_Total ?? 0)</td>
                                <td rowspan="2" class="tdDetailTotalCA">@(currDataDetailCA?.Daily_Total ?? 0)</td>
                                <td rowspan="2" class="tdVariance">@(currDataDetail?.Daily_Total - currDataDetailCA?.Daily_Total ?? 0)</td>
                            </tr>
                            <tr class="trDaily trBlackBottom">
                                <th class="thItems">
                                    Half Day
                                    <input type="hidden" name="iDetailItemType[]" class="form-control txtDetailItem" value="Daily Allowance" />
                                    <input type="hidden" name="iDetailItem[]" class="form-control txtDetailItem" value="Half Day" />
                                </th>
                                <td>
                                    <input type="text" name="iAmount[]" class="form-control txtAmount" placeholder="Amount" value="@(detailDaily.Where(w => w.Item == "Half Day").FirstOrDefault()?.CA_Amount ?? 00)" @(isAllowEdit ? "" : "disabled") />
                                    <input type="hidden" name="iDetailTotal[]" class="form-control txtDetailTotal" value="@(detailDaily.Where(w => w.Item == "Half Day").FirstOrDefault()?.CA_Total ?? 0)" />
                                </td>
                                <td class="text-center">X</td>
                                <td><input type="text" name="iDays[]" class="form-control txtDays" placeholder="Days" value="@(detailDaily.Where(w => w.Item == "Half Day").FirstOrDefault()?.CA_Days ?? currHalfDays)" @(isAllowEdit ? "" : "disabled") /></td>
                                <td class="tdDetailTotal">@(detailDaily.Where(w => w.Item == "Half Day").FirstOrDefault()?.CA_Total ?? 0)</td>
                            </tr>
                            @*Daily ===================================================!*@
                            @*Transportation !===================================================*@
                            @{
                                var detailTransport = bt.HC_Business_Trip_Settlement_Detail.Where(w => w.CA_ID == currDataDetail.ID && w.NIK == currDataDetail.NIK && w.Item_Type == "Transportation").ToList();
                            }
                            <tr class="trTransport trBlackTop">
                                <th class="thMainItems" rowspan="4">
                                    Transportation
                                    <button class="btn btn-sm btn-primary btnAttachment" data-expenses="Transportation">
                                        <i class="fas fa-file-alt"></i>
                                    </button>
                                </th>
                                <th class="thItems">
                                    Rent Car
                                    <input type="hidden" name="iDetailItemType[]" class="form-control txtDetailItem" value="Transportation" />
                                    <input type="hidden" name="iDetailItem[]" class="form-control txtDetailItem" value="Rent Car" />
                                </th>
                                <td>
                                    <input type="text" name="iAmount[]" class="form-control txtAmount" placeholder="Amount" @(currNIK == currRequest.NIK ? "" : "") value="@(detailTransport.Where(w => w.Item == "Rent Car").FirstOrDefault()?.CA_Amount ?? 0)" @(isAllowEdit ? "" : "disabled") />
                                    <input type="hidden" name="iDetailTotal[]" class="form-control txtDetailTotal" value="@(detailTransport.Where(w => w.Item == "Rent Car").FirstOrDefault()?.CA_Total ?? 0)" />
                                    <input type="hidden" name="iTransportTotal" class="form-control txtTotal" value="@(currDataDetail?.Transport_Total)" />
                                </td>
                                <td class="text-center">X</td>
                                <td><input type="text" name="iDays[]" class="form-control txtDays" placeholder="Days" value="@(detailTransport.Where(w => w.Item == "Rent Car").FirstOrDefault()?.CA_Days ?? currTotalDays)" @(isAllowEdit ? "" : "disabled") /></td>
                                <td class="tdDetailTotal tdTotalEVoucher" data-budget="@(budgetRentCar?.Budget_No + "|" + budgetRentCar?.Description)" data-allowance="@(DateTime.Now.ToString("yyMM_") + "Rent Car_" + currRequest.Destination + "_" + currRequest.Date_From?.ToString("dd MMM-") + currRequest?.Date_To?.ToString("dd MMM yyyy_") + currDataDetail.Name.Split(' ')[0])">@(detailTransport.Where(w => w.Item == "Rent Car").FirstOrDefault()?.CA_Total ?? 0)</td>
                                <td rowspan="4" class="tdTotal">@(currDataDetail?.Transport_Total ?? 0)</td>
                                <td rowspan="4" class="tdDetailTotalCA">@(currDataDetailCA?.Transport_Total ?? 0)</td>
                                <td rowspan="4" class="tdVariance">@(currDataDetail?.Transport_Total - currDataDetailCA?.Transport_Total ?? 0)</td>
                            </tr>
                            <tr class="trTransport">
                                <th class="thItems">
                                    Gasoline
                                    <input type="hidden" name="iDetailItemType[]" class="form-control txtDetailItem" value="Transportation" />
                                    <input type="hidden" name="iDetailItem[]" class="form-control txtDetailItem" value="Gasoline" />
                                </th>
                                <td>
                                    <input type="text" name="iAmount[]" class="form-control txtAmount" placeholder="Amount" @(currNIK == currRequest.NIK ? "" : "") value="@(detailTransport.Where(w => w.Item == "Gasoline").FirstOrDefault()?.CA_Amount ?? 0)" @(isAllowEdit ? "" : "disabled") />
                                    <input type="hidden" name="iDetailTotal[]" class="form-control txtDetailTotal" value="@(detailTransport.Where(w => w.Item == "Gasoline").FirstOrDefault()?.CA_Total ?? 0)" />
                                </td>
                                <td class="text-center">X</td>
                                <td><input type="text" name="iDays[]" class="form-control txtDays" placeholder="Days" value="@(detailTransport.Where(w => w.Item == "Gasoline").FirstOrDefault()?.CA_Days ?? currTotalDays)" @(isAllowEdit ? "" : "disabled") /></td>
                                <td class="tdDetailTotal tdTotalEVoucher" data-budget="@(budgetGasoline?.Budget_No + "|" + budgetGasoline?.Description)" data-allowance="@(DateTime.Now.ToString("yyMM_") + "Gasoline_" + currRequest.Destination + "_" + currRequest.Date_From?.ToString("dd MMM-") + currRequest?.Date_To?.ToString("dd MMM yyyy_") + currDataDetail.Name.Split(' ')[0])">@(detailTransport.Where(w => w.Item == "Gasoline").FirstOrDefault()?.CA_Total ?? 0)</td>
                            </tr>
                            <tr class="trTransport">
                                <th class="thItems">
                                    Tol
                                    <input type="hidden" name="iDetailItemType[]" class="form-control txtDetailItem" value="Transportation" />
                                    <input type="hidden" name="iDetailItem[]" class="form-control txtDetailItem" value="Tol" />
                                </th>
                                <td>
                                    <input type="text" name="iAmount[]" class="form-control txtAmount" placeholder="Amount" @(currNIK == currRequest.NIK ? "" : "") value="@(detailTransport.Where(w => w.Item == "Tol").FirstOrDefault()?.CA_Amount ?? 0)" @(isAllowEdit ? "" : "disabled") />
                                    <input type="hidden" name="iDetailTotal[]" class="form-control txtDetailTotal" value="@(detailTransport.Where(w => w.Item == "Tol").FirstOrDefault()?.CA_Total ?? 0)" />
                                </td>
                                <td class="text-center">X</td>
                                <td><input type="text" name="iDays[]" class="form-control txtDays" placeholder="Days" value="@(detailTransport.Where(w => w.Item == "Tol").FirstOrDefault()?.CA_Days ?? currTotalDays)" @(isAllowEdit ? "" : "disabled") /></td>
                                <td class="tdDetailTotal tdTotalEVoucher" data-budget="@(budgetToll?.Budget_No + "|" + budgetToll?.Description)" data-allowance="@(DateTime.Now.ToString("yyMM_") + "Toll_" + currRequest.Destination + "_" + currRequest.Date_From?.ToString("dd MMM-") + currRequest?.Date_To?.ToString("dd MMM yyyy_") + currDataDetail.Name.Split(' ')[0])">@(detailTransport.Where(w => w.Item == "Tol").FirstOrDefault()?.CA_Total ?? 0)</td>
                            </tr>
                            <tr class="trTransport trBlackBottom">
                                <th class="thItems">
                                    Parking
                                    <input type="hidden" name="iDetailItemType[]" class="form-control txtDetailItem" value="Transportation" />
                                    <input type="hidden" name="iDetailItem[]" class="form-control txtDetailItem" value="Parking" />
                                </th>
                                <td>
                                    <input type="text" name="iAmount[]" class="form-control txtAmount" placeholder="Amount" @(currNIK == currRequest.NIK ? "" : "") value="@(detailTransport.Where(w => w.Item == "Parking").FirstOrDefault()?.CA_Amount ?? 0)" @(isAllowEdit ? "" : "disabled") />
                                    <input type="hidden" name="iDetailTotal[]" class="form-control txtDetailTotal" value="@(detailTransport.Where(w => w.Item == "Parking").FirstOrDefault()?.CA_Total ?? 0)" />
                                </td>
                                <td class="text-center">X</td>
                                <td><input type="text" name="iDays[]" class="form-control txtDays" placeholder="Days" value="@(detailTransport.Where(w => w.Item == "Parking").FirstOrDefault()?.CA_Days ?? currTotalDays)" @(isAllowEdit ? "" : "disabled") /></td>
                                <td class="tdDetailTotal tdTotalEVoucher" data-budget="@(budgetToll?.Budget_No + "|" + budgetToll?.Description)" data-allowance="@(DateTime.Now.ToString("yyMM_") + "Parking_" + currRequest.Destination + "_" + currRequest.Date_From?.ToString("dd MMM-") + currRequest?.Date_To?.ToString("dd MMM yyyy_") + currDataDetail.Name.Split(' ')[0])">@(detailTransport.Where(w => w.Item == "Parking").FirstOrDefault()?.CA_Total ?? 0)</td>
                            </tr>
                            @*Transportation ===================================================!*@
                            @*Miscellanous !===================================================*@
                            @{
                                var detailMisc = bt.HC_Business_Trip_Settlement_Detail.Where(w => w.CA_ID == currDataDetail.ID && w.NIK == currDataDetail.NIK && w.Item_Type == "Miscellanous (Lain-Lain)").ToList();
                            }
                            <tr class="trMiscellanous trBlackTop">
                                <th class="thMainItems" rowspan="4">
                                    Miscellanous (Lain-Lain)
                                    <button class="btn btn-sm btn-primary btnAttachment" data-expenses="Miscellanous">
                                        <i class="fas fa-file-alt"></i>
                                    </button>
                                </th>
                                <th class="thItems">
                                    Entertainment
                                    <input type="hidden" name="iDetailItemType[]" class="form-control txtDetailItem" value="Miscellanous (Lain-Lain)" />
                                    <input type="hidden" name="iDetailItem[]" class="form-control txtDetailItem" value="Entertainment" />
                                </th>
                                <td>
                                    <input type="text" name="iAmount[]" class="form-control txtAmount" placeholder="Amount" value="@(detailMisc.Where(w => w.Item == "Entertainment").FirstOrDefault()?.CA_Amount ?? 0)" @(isAllowEdit ? "" : "disabled") />
                                    <input type="hidden" name="iDetailTotal[]" class="form-control txtDetailTotal" value="@(detailMisc.Where(w => w.Item == "Entertainment").FirstOrDefault()?.CA_Total ?? 0)" />
                                    <input type="hidden" name="iMiscellanousTotal" class="form-control txtTotal" value="@(currDataDetail?.Misc_Total ?? 0)" />
                                </td>
                                <td class="text-center">X</td>
                                <td><input type="text" name="iDays[]" class="form-control txtDays" placeholder="Days" value="@(detailMisc.Where(w => w.Item == "Entertainment").FirstOrDefault()?.CA_Days ?? 0)" @(isAllowEdit ? "" : "disabled") /></td>
                                <td class="tdDetailTotal tdTotalEVoucher" data-budget="@(budgetEntertaintment?.Budget_No + "|" + budgetEntertaintment?.Description)" data-allowance="@(DateTime.Now.ToString("yyMM_") + "Entertaint_" + currRequest.Destination + "_" + currRequest.Date_From?.ToString("dd MMM-") + currRequest?.Date_To?.ToString("dd MMM yyyy_") + currDataDetail.Name.Split(' ')[0])">@(detailMisc.Where(w => w.Item == "Entertainment").FirstOrDefault()?.CA_Total ?? 0)</td>
                                <td rowspan="4" class="tdTotal">@(currDataDetail?.Misc_Total ?? 0)</td>
                                <td rowspan="4" class="tdDetailTotalCA">@(currDataDetailCA?.Misc_Total ?? 0)</td>
                                <td rowspan="4" class="tdVariance">@(currDataDetail?.Misc_Total - currDataDetailCA?.Misc_Total ?? 0)</td>
                            </tr>
                            <tr class="trMiscellanous">
                                <th class="thItems">
                                    Laundry
                                    <input type="hidden" name="iDetailItemType[]" class="form-control txtDetailItem" value="Miscellanous (Lain-Lain)" />
                                    <input type="hidden" name="iDetailItem[]" class="form-control txtDetailItem" value="Laundry" />
                                </th>
                                <td>
                                    <input type="text" name="iAmount[]" class="form-control txtAmount" placeholder="Amount" value="@(detailMisc.Where(w => w.Item == "Laundry").FirstOrDefault()?.CA_Amount ?? 0)" @(isAllowEdit ? "" : "disabled") />
                                    <input type="hidden" name="iDetailTotal[]" class="form-control txtDetailTotal" value="@(detailMisc.Where(w => w.Item == "Laundry").FirstOrDefault()?.CA_Total ?? 0)" />
                                </td>
                                <td class="text-center">X</td>
                                <td><input type="text" name="iDays[]" class="form-control txtDays" placeholder="Days" value="@(detailMisc.Where(w => w.Item == "Laundry").FirstOrDefault()?.CA_Days ?? 0)" @(isAllowEdit ? "" : "disabled") /></td>
                                <td class="tdDetailTotal tdTotalEVoucher" data-budget="UNB|Unbudgeted" data-allowance="@(DateTime.Now.ToString("yyMM_") + "Laundry_" + currRequest.Destination + "_" + currRequest.Date_From?.ToString("dd MMM-") + currRequest?.Date_To?.ToString("dd MMM yyyy_") + currDataDetail.Name.Split(' ')[0])">@(detailMisc.Where(w => w.Item == "Laundry").FirstOrDefault()?.CA_Total ?? 0)</td>
                            </tr>
                            <tr class="trMiscellanous">
                                <th class="thItems">
                                    Baggage
                                    <input type="hidden" name="iDetailItemType[]" class="form-control txtDetailItem" value="Miscellanous (Lain-Lain)" />
                                    <input type="hidden" name="iDetailItem[]" class="form-control txtDetailItem" value="Baggage" />
                                </th>
                                <td>
                                    <input type="text" name="iAmount[]" class="form-control txtAmount" placeholder="Amount" value="@(detailMisc.Where(w => w.Item == "Baggage").FirstOrDefault()?.CA_Amount ?? 0)" @(isAllowEdit ? "" : "disabled") />
                                    <input type="hidden" name="iDetailTotal[]" class="form-control txtDetailTotal" value="@(detailMisc.Where(w => w.Item == "Baggage").FirstOrDefault()?.CA_Total ?? 0)" />
                                </td>
                                <td class="text-center">X</td>
                                <td><input type="text" name="iDays[]" class="form-control txtDays" placeholder="Days" value="@(detailMisc.Where(w => w.Item == "Baggage").FirstOrDefault()?.CA_Days ?? 0)" @(isAllowEdit ? "" : "disabled") /></td>
                                <td class="tdDetailTotal tdTotalEVoucher" data-budget="@(budgetBaggage?.Budget_No + "|" + budgetBaggage?.Description)" data-allowance="@(DateTime.Now.ToString("yyMM_") + "Baggage_" + currRequest.Destination + "_" + currRequest.Date_From?.ToString("dd MMM-") + currRequest?.Date_To?.ToString("dd MMM yyyy_") + currDataDetail.Name.Split(' ')[0])">@(detailMisc.Where(w => w.Item == "Baggage").FirstOrDefault()?.CA_Total ?? 0)</td>
                            </tr>
                            <tr class="trMiscellanous trBlackBottom">
                                <th class="thItems">
                                    Emergency
                                    <input type="hidden" name="iDetailItemType[]" class="form-control txtDetailItem" value="Miscellanous (Lain-Lain)" />
                                    <input type="hidden" name="iDetailItem[]" class="form-control txtDetailItem" value="Emergency" />
                                </th>
                                <td>
                                    <input type="text" name="iAmount[]" class="form-control txtAmount" placeholder="Amount" value="@(detailMisc.Where(w => w.Item == "Emergency").FirstOrDefault()?.CA_Amount ?? 0)" @(isAllowEdit ? "" : "disabled") />
                                    <input type="hidden" name="iDetailTotal[]" class="form-control txtDetailTotal" value="@(detailMisc.Where(w => w.Item == "Emergency").FirstOrDefault()?.CA_Total ?? 0)" />
                                </td>
                                <td class="text-center">X</td>
                                <td><input type="text" name="iDays[]" class="form-control txtDays" placeholder="Days" value="@(detailMisc.Where(w => w.Item == "Emergency").FirstOrDefault()?.CA_Days ?? 0)" @(isAllowEdit ? "" : "disabled") /></td>
                                <td class="tdDetailTotal tdTotalEVoucher" data-budget="UNB|Unbudgeted" data-allowance="@(DateTime.Now.ToString("yyMM_") + "Emergency_" + currRequest.Destination + "_" + currRequest.Date_From?.ToString("dd MMM-") + currRequest?.Date_To?.ToString("dd MMM yyyy_") + currDataDetail.Name.Split(' ')[0])">@(detailMisc.Where(w => w.Item == "Emergency").FirstOrDefault()?.CA_Total ?? 0)</td>
                            </tr>
                            @*Miscellanous ===================================================!*@
                        </tbody>
                        <tfoot>
                            <tr class="trGrandTotal trBlackTop">
                                <th colspan="6" class="thItems">
                                    TOTAL
                                </th>
                                <td class="tdGrandTotal">0</td>
                                <td class="tdGrandTotalCA">0</td>
                                <td class="tdGrandTotalVariance">0</td>
                            </tr>
                            <tr class="trGrandTotal @(currData.Destination_Type.IndexOf("Overseas") > -1?"":"d-none")">
                                <th colspan="5" class="thItems">
                                    Exchange Rate
                                </th>
                                <td class="tdGrandTotalExchangeRate" data-exchangerateca="@(currDataDetailCA?.Exchange_Rate ?? 1)">
                                    <input type="text" name="iExchangeRate" class="form-control txtExchangeRate" placeholder="Exchange Rate" value="@(currDataDetail?.Exchange_Rate ?? 1)" />
                                </td>
                                <td class="tdGrandTotalExchange">0</td>
                                <td class="tdGrandTotalExchangeCA">0</td>
                                <td class="tdGrandTotalExchangeVariance">0</td>
                            </tr>
                        </tfoot>
                    </table>
                    <table class="table table-bordered tblCABudget">
                        <thead>
                            <tr>
                                <th style="width:200px;"></th>
                                <th>Budget Number</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="@(currRequest.Travel_Need.Contains("Hotel") ? "":"d-none")">
                                <th>Hotel</th>
                                <td>
                                    @if (isAllowEdit)
                                    {
                                        <select name="iBudgetNumberHotel" class="form-control select2 selBudgetNumber" style="width:100%" @(currRequest.Travel_Need.Contains("Hotel") ? "required" : "")>
                                            <option value="">-Budget Number-</option>
                                            @foreach (var item in ViewBag.Budget)
                                            {
                                                <option data-dept-to="@(item.Section_To_Code)" @(currDataDetail?.Hotel_Budget == item.Budget_No ? "selected" : (currDataDetail?.Department == "MARKETING" && item.Budget_No == "BEX-FY124-B3160-047" ? "selected" : (currDataDetail.Department.Contains("SALES - AFTERMARKET") && item.Budget_No == "BEX-FY124-B3130-021" ? "selected" : ""))) value="@(item.Budget_No + "|" + item.Description)">@(item.Budget_No + " | " + item.Description)</option>
                                            }
                                            <option data-dept-to="ALL" @(currDataDetail?.Hotel_Budget == "UNB" ? "selected" : "") value="@("UNB|Unbudgeted")">@("UNB | Unbudgeted")</option>
                                        </select>
                                    }
                                    else
                                    {
                                        <input type="text" class="form-control" disabled value="@(Hotel_Budget == "UNB" ? "UNB | Unbudgeted" : budgetHotel?.Budget_No + " | " + budgetHotel?.Description)" />
                                    }
                                </td>
                            </tr>
                            <tr>
                                <th>Daily Allowance</th>
                                <td>
                                    @if (isAllowEdit)
                                    {
                                        <select name="iBudgetNumberDaily" class="form-control select2 selBudgetNumber" style="width:100%">
                                            <option value="">-Budget Number-</option>
                                            @foreach (var item in ViewBag.Budget)
                                            {
                                                <option data-dept-to="@(item.Section_To_Code)" @(currDataDetail?.Daily_Budget == item.Budget_No ? "selected" : (currDataDetail?.Department == "MARKETING" && item.Budget_No == "BEX-FY124-B3160-047" ? "selected" : (currDataDetail.Department.Contains("SALES - AFTERMARKET") && item.Budget_No == "BEX-FY124-B3130-019" ? "selected" : ""))) value="@(item.Budget_No + "|" + item.Description)">@(item.Budget_No + " | " + item.Description)</option>
                                            }
                                            <option data-dept-to="ALL" @(currDataDetail?.Daily_Budget == "UNB" ? "selected" : "") value="@("UNB|Unbudgeted")">@("UNB | Unbudgeted")</option>
                                        </select>
                                    }
                                    else
                                    {
                                        <input type="text" class="form-control" disabled value="@(Daily_Budget == "UNB" ? "UNB | Unbudgeted" : budgetDaily?.Budget_No + " | " + budgetDaily?.Description)" />
                                    }
                                </td>
                            </tr>
                            <tr>
                                <th>Meals</th>
                                <td>
                                    @if (isAllowEdit)
                                    {
                                        <select name="iBudgetNumberMeals" class="form-control select2 selBudgetNumber" style="width:100%">
                                            <option value="">-Budget Number-</option>
                                            @foreach (var item in ViewBag.Budget)
                                            {
                                                <option data-dept-to="@(item.Section_To_Code)" @(currDataDetail?.Meals_Budget == item.Budget_No ? "selected" : (currDataDetail?.Department == "MARKETING" && item.Budget_No == "BEX-FY124-B3160-047" ? "selected" : (currDataDetail.Department.Contains("SALES - AFTERMARKET") && item.Budget_No == "BEX-FY124-B3130-022" ? "selected" : ""))) value="@(item.Budget_No + "|" + item.Description)">@(item.Budget_No + " | " + item.Description)</option>
                                            }
                                            <option data-dept-to="ALL" @(currDataDetail?.Meals_Budget == "UNB" ? "selected" : "") value="@("UNB|Unbudgeted")">@("UNB | Unbudgeted")</option>
                                        </select>
                                    }
                                    else
                                    {
                                        <input type="text" class="form-control" disabled value="@(Meals_Budget == "UNB" ? "UNB | Unbudgeted" : budgetMeals?.Budget_No + " | " + budgetMeals?.Description)" />
                                    }
                                </td>
                            </tr>
                            <tr class="@(currRequest.Travel_Method.Contains("Airplane") ? "":"d-none")">
                                <th>Flight</th>
                                <td>
                                    @if (isAllowEdit)
                                    {
                                        <select name="iBudgetNumberFlight" class="form-control select2 selBudgetNumber" style="width:100%" @(currRequest.Travel_Method.Contains("Airplane") ? "required" : "")>
                                            <option value="">-Budget Number-</option>
                                            @foreach (var item in ViewBag.Budget)
                                            {
                                                <option data-dept-to="@(item.Section_To_Code)" @(currDataDetail?.Flight_Budget == item.Budget_No ? "selected" : "") value="@(item.Budget_No + "|" + item.Description)">@(item.Budget_No + " | " + item.Description)</option>
                                            }
                                            <option data-dept-to="ALL" @(currDataDetail?.Flight_Budget == "UNB" ? "selected" : "") value="@("UNB|Unbudgeted")">@("UNB | Unbudgeted")</option>
                                        </select>
                                    }
                                    else
                                    {
                                        <input type="text" class="form-control" disabled value="@(Flight_Budget == "UNB" ? "UNB | Unbudgeted" : budgetFlight?.Budget_No + " | " + budgetFlight?.Description)" />
                                    }
                                </td>
                            </tr>
                            <tr class="@(currRequest.Travel_Need.Contains("Rent Car") ? "":"d-none")">
                                <th>Rent Car</th>
                                <td>
                                    @if (isAllowEdit)
                                    {
                                        <select name="iBudgetNumberRentCar" class="form-control select2 selBudgetNumber" style="width:100%" @(currRequest.Travel_Need.Contains("Rent Car") ? "required" : "")>
                                            <option value="">-Budget Number-</option>
                                            @foreach (var item in ViewBag.Budget)
                                            {
                                                <option data-dept-to="@(item.Section_To_Code)" @(currDataDetail?.RentCar_Budget == item.Budget_No ? "selected" : (currDataDetail?.Department == "MARKETING" && item.Budget_No == "BEX-FY124-B3160-047" ? "selected" : (currDataDetail.Department.Contains("SALES - AFTERMARKET") && item.Budget_No == "BEX-FY124-B3130-023" ? "selected" : ""))) value="@(item.Budget_No + "|" + item.Description)">@(item.Budget_No + " | " + item.Description)</option>
                                            }
                                            <option data-dept-to="ALL" @(currDataDetail?.RentCar_Budget == "UNB" ? "selected" : "") value="@("UNB|Unbudgeted")">@("UNB | Unbudgeted")</option>
                                        </select>
                                    }
                                    else
                                    {
                                        <input type="text" class="form-control" disabled value="@(RentCar_Budget == "UNB" ? "UNB | Unbudgeted" : budgetRentCar?.Budget_No + " | " + budgetRentCar?.Description)" />
                                    }
                                </td>
                            </tr>
                            <tr class="@(currRequest.Travel_Need.Contains("Entertainment") ? "":"d-none")">
                                <th>Entertainment</th>
                                <td>
                                    @if (isAllowEdit)
                                    {
                                        <select name="iBudgetNumberEntertainment" class="form-control select2 selBudgetNumber" style="width:100%" @(currRequest.Travel_Need.Contains("Entertainment") ? "required" : "")>
                                            <option value="">-Budget Number-</option>
                                            @foreach (var item in ViewBag.Budget)
                                            {
                                                <option data-dept-to="@(item.Section_To_Code)" @(currDataDetail?.Entertaintment_Budget == item.Budget_No ? "selected" : (currDataDetail?.Department == "MARKETING" && item.Budget_No == "BEX-FY124-B3160-047" ? "selected" : (currDataDetail.Department.Contains("SALES - AFTERMARKET") && item.Budget_No == "BEX-FY124-B3130-029" ? "selected" : ""))) value="@(item.Budget_No + "|" + item.Description)">@(item.Budget_No + " | " + item.Description)</option>
                                            }
                                            <option data-dept-to="ALL" @(currDataDetail?.Entertaintment_Budget == "UNB" ? "selected" : "") value="@("UNB|Unbudgeted")">@("UNB | Unbudgeted")</option>
                                        </select>
                                    }
                                    else
                                    {
                                        <input type="text" class="form-control" disabled value="@(Entertaintment_Budget == "UNB" ? "UNB | Unbudgeted" : budgetEntertaintment?.Budget_No + " | " + budgetEntertaintment?.Description)" />
                                    }
                                </td>
                            </tr>
                            @*<tr class="@(currNIK == currRequest.NIK  && currRequest.Travel_Method.Contains("Company Vehicle") ? "":"d-none")">*@
                            <tr class="@(currRequest.Travel_Method.Contains("Company Vehicle") ? "":"d-none")">
                                <th>Gasoline</th>
                                <td>
                                    @if (isAllowEdit)
                                    {
                                        <select name="iBudgetNumberGasoline" class="form-control select2 selBudgetNumber" style="width:100%" @(currRequest.Travel_Method.Contains("Company Vehicle") ? "required" : "")>
                                            <option value="">-Budget Number-</option>
                                            @foreach (var item in ViewBag.Budget)
                                            {
                                                <option data-dept-to="@(item.Section_To_Code)" @(currDataDetail?.Gasoline_Budget == item.Budget_No ? "selected" : (currDataDetail?.Department == "MARKETING" && item.Budget_No == "BEX-FY124-B3160-047" ? "selected" : (currDataDetail.Department.Contains("SALES - AFTERMARKET") && item.Budget_No == "BEX-FY124-B3130-020" ? "selected" : ""))) value="@(item.Budget_No + "|" + item.Description)">@(item.Budget_No + " | " + item.Description)</option>
                                            }
                                            <option data-dept-to="ALL" @(currDataDetail?.Gasoline_Budget == "UNB" ? "selected" : "") value="@("UNB|Unbudgeted")">@("UNB | Unbudgeted")</option>
                                        </select>
                                    }
                                    else
                                    {
                                        <input type="text" class="form-control" disabled value="@(Gasoline_Budget == "UNB" ? "UNB | Unbudgeted" : budgetGasoline?.Budget_No + " | " + budgetGasoline?.Description)" />
                                    }
                                </td>
                            </tr>
                            <tr class="@(currRequest.Travel_Method.Contains("Company Vehicle") ? "":"d-none")">
                                <th>Toll & Parking</th>
                                <td>
                                    @if (isAllowEdit)
                                    {
                                        <select name="iBudgetNumberToll" class="form-control select2 selBudgetNumber" style="width:100%" @(currRequest.Travel_Method.Contains("Company Vehicle") ? "required" : "")>
                                            <option value="">-Budget Number-</option>
                                            @foreach (var item in ViewBag.Budget)
                                            {
                                                <option data-dept-to="@(item.Section_To_Code)" @(currDataDetail?.Toll_Budget == item.Budget_No ? "selected" : (currDataDetail?.Department == "MARKETING" && item.Budget_No == "BEX-FY124-B3160-047" ? "selected" : (currDataDetail.Department.Contains("SALES - AFTERMARKET") && item.Budget_No == "BEX-FY124-B3130-025" ? "selected" : ""))) value="@(item.Budget_No + "|" + item.Description)">@(item.Budget_No + " | " + item.Description)</option>
                                            }
                                            <option data-dept-to="ALL" @(currDataDetail?.Toll_Budget == "UNB" ? "selected" : "") value="@("UNB|Unbudgeted")">@("UNB | Unbudgeted")</option>
                                        </select>
                                    }
                                    else
                                    {
                                        <input type="text" class="form-control" disabled value="@(Toll_Budget == "UNB" ? "UNB | Unbudgeted" : budgetToll?.Budget_No + " | " + budgetToll?.Description)" />
                                    }
                                </td>
                            </tr>
                            <tr class="@(currRequest.Travel_Need.Contains("Baggage") ? "":"d-none")">
                                <th>Baggage</th>
                                <td>
                                    @if (isAllowEdit)
                                    {
                                        <select name="iBudgetNumberBaggage" class="form-control select2 selBudgetNumber" style="width:100%" @(currRequest.Travel_Need.Contains("Baggage") ? "required" : "")>
                                            <option value="">-Budget Number-</option>
                                            @foreach (var item in ViewBag.Budget)
                                            {
                                                <option data-dept-to="@(item.Section_To_Code)" @(currDataDetail?.Baggage_Budget == item.Budget_No ? "selected" : "") value="@(item.Budget_No + "|" + item.Description)">@(item.Budget_No + " | " + item.Description)</option>
                                            }
                                            <option data-dept-to="ALL" @(currDataDetail?.Baggage_Budget == "UNB" ? "selected" : "") value="@("UNB|Unbudgeted")">@("UNB | Unbudgeted")</option>
                                        </select>
                                    }
                                    else
                                    {
                                        <input type="text" class="form-control" disabled value="@(Baggage_Budget == "UNB" ? "UNB | Unbudgeted" : budgetBaggage?.Budget_No + " | " + budgetBaggage?.Description)" />
                                    }
                                </td>
                            </tr>
                            <tr class="@(currRequest.Travel_Need.Contains("Taxi") ? "":"d-none")">
                                <th>Taxi</th>
                                <td>
                                    @if (isAllowEdit)
                                    {
                                        <select name="iBudgetNumberTaxi" class="form-control select2 selBudgetNumber" style="width:100%" @(currRequest.Travel_Need.Contains("Taxi") ? "required" : "")>
                                            <option value="">-Budget Number-</option>
                                            @foreach (var item in ViewBag.Budget)
                                            {
                                                <option data-dept-to="@(item.Section_To_Code)" @(currDataDetail?.Taxi_Budget == item.Budget_No ? "selected" : "") value="@(item.Budget_No + "|" + item.Description)">@(item.Budget_No + " | " + item.Description)</option>
                                            }
                                            <option data-dept-to="ALL" @(currDataDetail?.Taxi_Budget == "UNB" ? "selected" : "") value="@("UNB|Unbudgeted")">@("UNB | Unbudgeted")</option>
                                        </select>
                                    }
                                    else
                                    {
                                        <input type="text" class="form-control" disabled value="@(Taxi_Budget == "UNB" ? "UNB | Unbudgeted"  : budgetTaxi?.Budget_No + " | " + budgetTaxi?.Description)" />
                                    }
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    @if (isAllowEdit)
                    {
                        <div class="form-group row">
                            <div class="col-12">
                                <button type="submit" class="btn btnSettlementSave @(currDataDetail != null ? "btn-warning" : "btn-primary") form-control" onclick="return confirm('Are you sure want to @(currDataDetail != null ? "save" : "submit") this data?');">@(currDataDetail != null ? "Save" : "Submit")</button>
                            </div>
                        </div>
                    }
                </div>
            </form>
            <div class="form-group row">
                <div class="col-12">
                    <div id="QTComments"></div>
                </div>
            </div>
            <table class="table table-bordered tblSign mt-2">
                <thead>
                    <tr>
                        <th colspan="2" class="text-center">Approved By</th>
                        <th colspan="5" class="text-center">Checked By</th>
                        <th colspan="2" class="text-center">Prepared By</th>
                    </tr>
                    <tr>
                        <th class="text-center align-middle">President Director</th>
                        <th class="text-center align-middle">GM Finance</th>
                        <th class="text-center align-middle">Finance</th>
                        <th class="text-center align-middle">Human Capital</th>
                        <th class="text-center align-middle">Director / GM</th>
                        <th class="text-center align-middle">Sr. Manager</th>
                        <th class="text-center align-middle">Manager</th>
                        <th class="text-center align-middle">General Affair</th>
                        <th class="text-center align-middle">Traveller</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="text-center" style="height:125px;width:100px;">
                            @if (currDataDetail != null && currDataDetail.Approval == 3 && currDataDetail.Approval_Sub == 1 && isAllowSign)
                            {
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    <button type="submit" class="btn btn-primary" onclick="return confirm('Are you sure want to sign this request ?')" name="btnType" value="Sign">Sign</button>
                                </form>
                                <hr />
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    @Html.Partial("Partial/returnRejectForm", new ViewDataDictionary { { "modelId", "returnModal" }, { "btnType", "Return" } })
                                    <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#returnModal">Return</button>
                                </form>
                                <hr />
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    @Html.Partial("Partial/returnRejectForm", new ViewDataDictionary { { "modelId", "rejectModal" }, { "btnType", "Reject" } })
                                    <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#rejectModal">Reject</button>
                                </form>
                            }
                            else
                            {
                                if (currDataDetail != null && (currDataDetail.Approval >= 3 && currDataDetail.Approval_Sub > 1) || currDataDetail.Approval > 3)
                                {
                                    <i class="fas fa-check-circle img-fluid" style="color:green;font-size:7em;"></i>
                                }
                            }
                        </td>
                        <td class="text-center" style="height:125px;width:100px;">
                            @if (currDataDetail != null && currDataDetail.Approval == 3 && currDataDetail.Approval_Sub == 0 && isAllowSign)
                            {
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    <button type="submit" class="btn btn-primary" onclick="return confirm('Are you sure want to sign this request ?')" name="btnType" value="Sign">Sign</button>
                                </form>
                                <hr />
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    @Html.Partial("Partial/returnRejectForm", new ViewDataDictionary { { "modelId", "returnModal" }, { "btnType", "Return" } })
                                    <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#returnModal">Return</button>
                                </form>
                                <hr />
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    @Html.Partial("Partial/returnRejectForm", new ViewDataDictionary { { "modelId", "rejectModal" }, { "btnType", "Reject" } })
                                    <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#rejectModal">Reject</button>
                                </form>
                            }
                            else
                            {
                                if (currDataDetail != null && (currDataDetail.Approval >= 3 && currDataDetail.Approval_Sub > 0) || currDataDetail.Approval > 3)
                                {
                                    <i class="fas fa-check-circle img-fluid" style="color:green;font-size:7em;"></i>
                                }
                            }
                        </td>
                        <td class="text-center" style="height:125px;width:100px;">
                            @if (currDataDetail != null && currDataDetail.Approval == 2 && currDataDetail.Approval_Sub == 4 && isAllowSign)
                            {
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    <button type="submit" class="btn btn-primary" onclick="return confirm('Are you sure want to sign this request ?')" name="btnType" value="Sign">Sign</button>
                                </form>
                                <hr />
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    @Html.Partial("Partial/returnRejectForm", new ViewDataDictionary { { "modelId", "returnModal" }, { "btnType", "Return" } })
                                    <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#returnModal">Return</button>
                                </form>
                                <hr />
                                if (currDataDetail.isRevise == true)
                                {
                                    <label>Waiting for Revise</label>
                                }
                                else
                                {
                                    <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                        <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                        <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                        @Html.Partial("Partial/returnRejectForm", new ViewDataDictionary { { "modelId", "reviseModal" }, { "btnType", "Revise" } })
                                        <button type="button" class="btn btn-info" data-toggle="modal" data-target="#reviseModal">Revise</button>
                                    </form>
                                }
                            }
                            else
                            {
                                if (currDataDetail != null && (currDataDetail.Approval >= 2 && currDataDetail.Approval_Sub > 4) || currDataDetail.Approval > 2)
                                {
                                    <i class="fas fa-check-circle img-fluid" style="color:green;font-size:7em;"></i>
                                }
                            }
                        </td>
                        <td class="text-center" style="height:125px;width:100px;">
                            @if (currDataDetail != null && currDataDetail.Approval == 2 && currDataDetail.Approval_Sub == 3 && isAllowSign)
                            {
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    <button type="submit" class="btn btn-primary" onclick="return confirm('Are you sure want to sign this request ?')" name="btnType" value="Sign">Sign</button>
                                </form>
                                <hr />
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    @Html.Partial("Partial/returnRejectForm", new ViewDataDictionary { { "modelId", "returnModal" }, { "btnType", "Return" } })
                                    <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#returnModal">Return</button>
                                </form>
                            }
                            else
                            {
                                if (currDataDetail != null && (currDataDetail.Approval >= 2 && currDataDetail.Approval_Sub > 3) || currDataDetail.Approval > 2)
                                {
                                    <i class="fas fa-check-circle img-fluid" style="color:green;font-size:7em;"></i>
                                }
                            }
                        </td>
                        <td class="text-center" style="height:125px;width:100px;">
                            @if (currDataDetail != null && currDataDetail.Approval == 2 && currDataDetail.Approval_Sub == 2 && isAllowSign)
                            {
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    <button type="submit" class="btn btn-primary" onclick="return confirm('Are you sure want to sign this request ?')" name="btnType" value="Sign">Sign</button>
                                </form>
                                <hr />
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    @Html.Partial("Partial/returnRejectForm", new ViewDataDictionary { { "modelId", "returnModal" }, { "btnType", "Return" } })
                                    <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#returnModal">Return</button>
                                </form>
                            }
                            else
                            {
                                if (currDataDetail != null && (currDataDetail.Approval >= 2 && currDataDetail.Approval_Sub > 2) || currDataDetail.Approval > 2)
                                {
                                    <i class="fas fa-check-circle img-fluid" style="color:green;font-size:7em;"></i>
                                }
                            }
                        </td>
                        <td class="text-center" style="height:125px;width:100px;">
                            @if (currDataDetail != null && currDataDetail.Approval == 2 && currDataDetail.Approval_Sub == 1 && isAllowSign)
                            {
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    <button type="submit" class="btn btn-primary" onclick="return confirm('Are you sure want to sign this request ?')" name="btnType" value="Sign">Sign</button>
                                </form>
                                <hr />
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    @Html.Partial("Partial/returnRejectForm", new ViewDataDictionary { { "modelId", "returnModal" }, { "btnType", "Return" } })
                                    <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#returnModal">Return</button>
                                </form>
                            }
                            else
                            {
                                if (currDataDetail != null && (currDataDetail.Approval >= 2 && currDataDetail.Approval_Sub > 1) || currDataDetail.Approval > 2)
                                {
                                    <i class="fas fa-check-circle img-fluid" style="color:green;font-size:7em;"></i>
                                }
                            }
                        </td>
                        <td class="text-center" style="height:125px;width:100px;">
                            @if (currDataDetail != null && currDataDetail.Approval == 2 && currDataDetail.Approval_Sub == 0 && isAllowSign)
                            {
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    <button type="submit" class="btn btn-primary" onclick="return confirm('Are you sure want to sign this request ?')" name="btnType" value="Sign">Sign</button>
                                </form>
                                <hr />
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    @Html.Partial("Partial/returnRejectForm", new ViewDataDictionary { { "modelId", "returnModal" }, { "btnType", "Return" } })
                                    <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#returnModal">Return</button>
                                </form>
                            }
                            else
                            {
                                if (currDataDetail != null && (currDataDetail.Approval >= 2 && currDataDetail.Approval_Sub > 0) || currDataDetail.Approval > 2)
                                {
                                    <i class="fas fa-check-circle img-fluid" style="color:green;font-size:7em;"></i>
                                }
                            }
                        </td>
                        <td class="text-center" style="height:125px;width:100px;">
                            @if (currDataDetail != null && currDataDetail.Approval == 1 && currDataDetail.Approval_Sub == 1 && isAllowSign)
                            {
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    <button type="submit" class="btn btn-primary" onclick="return confirm('Are you sure want to sign this request ?')" name="btnType" value="Sign">Sign</button>
                                </form>
                                <hr />
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    @Html.Partial("Partial/returnRejectForm", new ViewDataDictionary { { "modelId", "returnModal" }, { "btnType", "Return" } })
                                    <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#returnModal">Return</button>
                                </form>
                            }
                            else
                            {
                                if (currDataDetail != null && (currDataDetail.Approval >= 1 && currDataDetail.Approval_Sub > 1) || currDataDetail.Approval > 1)
                                {
                                    <i class="fas fa-check-circle img-fluid" style="color:green;font-size:7em;"></i>
                                }
                            }
                        </td>
                        <td class="text-center" style="height:125px;width:100px;">
                            @if (currDataDetail != null && currDataDetail.Approval == 1 && currDataDetail.Approval_Sub == 0 && isAllowSign)
                            {
                                <form action="@Url.Action("settlementSign", "BusinessTrip", new { area = "HC" })" method="post">
                                    <input type="hidden" name="iSignReqNumber" value="@(Request["ReqNumber"])" />
                                    <input type="hidden" name="iSignNIK" value="@(Request["NIK"])" />
                                    <button type="submit" class="btn btn-primary" onclick="return confirm('Are you sure want to sign this request ?')" name="btnType" value="Sign">Sign</button>
                                </form>
                            }
                            else
                            {
                                if (currDataDetail != null && (currDataDetail.Approval >= 1 && currDataDetail.Approval_Sub > 0) || currDataDetail.Approval > 1)
                                {
                                    <i class="fas fa-check-circle img-fluid" style="color:green;font-size:7em;"></i>
                                }
                            }
                        </td>
                    </tr>
                    <tr>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 4 && currDataDetail.Approval_Sub >= 0) || currDataDetail.Approval > 4)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 4, 0, 1, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 3 && currDataDetail.Approval_Sub > 0) || currDataDetail.Approval > 3)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 3, 1, 1, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 3 && currDataDetail.Approval_Sub >= 0) || currDataDetail.Approval > 3)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 3, 0, 1, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 2 && currDataDetail.Approval_Sub > 3) || currDataDetail.Approval > 2)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 2, 4, 1, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 1 && currDataDetail.Approval_Sub > 2) || currDataDetail.Approval > 2)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 2, 3, 1, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 2 && currDataDetail.Approval_Sub > 1) || currDataDetail.Approval > 2)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 2, 2, 1, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 2 && currDataDetail.Approval_Sub > 0) || currDataDetail.Approval > 2)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 2, 1, 1, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 2 && currDataDetail.Approval_Sub >= 0) || currDataDetail.Approval > 2)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 2, 0, 1, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 1 && currDataDetail.Approval_Sub > 0) || currDataDetail.Approval > 1)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 1, 1, 1, 2));
                            }
                        </td>
                    </tr>
                    <tr>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 4 && currDataDetail.Approval_Sub >= 0) || currDataDetail.Approval > 4)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 4, 0, 2, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 3 && currDataDetail.Approval_Sub > 0) || currDataDetail.Approval > 3)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 3, 1, 2, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 3 && currDataDetail.Approval_Sub >= 0) || currDataDetail.Approval > 3)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 3, 0, 2, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 2 && currDataDetail.Approval_Sub > 3) || currDataDetail.Approval > 2)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 2, 4, 2, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 1 && currDataDetail.Approval_Sub > 2) || currDataDetail.Approval > 2)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 2, 3, 2, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 2 && currDataDetail.Approval_Sub > 1) || currDataDetail.Approval > 2)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 2, 2, 2, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 2 && currDataDetail.Approval_Sub > 0) || currDataDetail.Approval > 2)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 2, 1, 2, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 2 && currDataDetail.Approval_Sub >= 0) || currDataDetail.Approval > 2)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 2, 0, 2, 2));
                            }
                        </td>
                        <td class="text-center">
                            @if (currDataDetail != null && (currDataDetail.Approval >= 1 && currDataDetail.Approval_Sub > 0) || currDataDetail.Approval > 1)
                            {
                                @(BT.ApprovalHistory(currDataDetail.ID.ToString(), 1, 1, 2, 2));
                            }
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
}

<div class="modal fade mdlAttachment" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <form id="NSNewAppForm" action="@Url.Action("uploadAttachment","BusinessTrip",new { area = "HC" })" method="post" enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Attachment</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">
                        <div class="form-group row">
                            <label for="selPeriod" class="col-3 text-right font-weight-bold text-right font-weight-bold">Attachment</label>
                            <div class="col-9">
                                <input id="hfexpenses" name="iExpenses" type="hidden" value="" />
                                <input id="hfReqNumber" name="iReqNumber" type="hidden" value="@(Request["ReqNumber"])" />
                                <input id="hfSettlementID" name="iSettlementID" type="hidden" value="@(currDataDetail?.ID)" />
                                <input id="hfNIK" name="iNIK" type="hidden" value="@(Request["NIK"])" />
                                <input type="file" name="iFiles" multiple="multiple" />
                                <ul class="ulFiles pl-0"></ul>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnStepSubmit" type="submit" class="btn btn-default">Upload</button>
                </div>
            </div>
        </form>
    </div>
</div>