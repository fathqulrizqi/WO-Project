
@{
    ViewBag.Title = "EditMasterItem";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        font-family: sans-serif;
    }

    a {
        color: #369;
    }

    .box {
        width: 485px;
        float: left;
    }

    .note {
        width: 500px;
        margin: 50px auto;
        font-size: 1.1em;
        color: #333;
        text-align: justify;
    }

    #drop-area {
        position: relative;
        border: 2px solid #ccc;
        width: 300px;
        height: 280px;
        overflow: hidden;
        margin-bottom: 10px;
    }

        #drop-area .controll-panel {
            position: absolute;
            bottom: 0;
            right: 0;
        }

            #drop-area .controll-panel .item {
                display: inline-block;
                padding: 10px;
                cursor: pointer;
                background-color: #23232360;
            }

                #drop-area .controll-panel .item i {
                    color: #fff;
                }

        #drop-area label {
            margin-bottom: 0;
            height: 100%;
            width: 100%;
            display: block;
        }

        #drop-area .uploadIcon {
            border: none;
            height: 100%;
        }

            #drop-area .uploadIcon i {
                margin: 0 auto;
                display: block;
                width: 60px;
                position: relative;
                top: 45%;
            }

        #drop-area.highlight {
            border-color: purple;
        }

    .my-form {
        margin-bottom: 10px;
    }

    #gallery {
        height: 100%;
    }

        #gallery img {
            vertical-align: middle;
            width: 100%;
        }

    .button {
        display: inline-block;
        padding: 10px;
        background: #ccc;
        cursor: pointer;
        border-radius: 5px;
        border: 1px solid #ccc;
    }

        .button:hover {
            background: #ddd;
        }

    #fileElem {
        display: none;
    }

    #sendForm {
        width: 100%;
    }

        #sendForm .areapaste input {
            padding-left: 10px;
            width: 320px;
            height: 35px;
            font-size: 16px;
        }

    /*_______________*/
    #details_img {
        padding: 20px;
        float: left;
        width: 630px;
    }

        #details_img .list .item {
            margin-bottom: 10px;
        }

            #details_img .list .item .attr {
                width: 120px;
            }

            #details_img .list .item .attr,
            #details_img .list .item .data {
                display: inline-block;
            }

    #container-image .container {
        width: 200px;
        display: inline-block;
    }

    input[type=radio] {
        width:30px;
        height:30px;
    }
    .form-check-input {
        position: relative;
        margin-top: .3rem;
        margin-left: -1.25rem;
    }

    .form-check-label {
        margin-bottom: 0;
        position: absolute;
        top: 25%;
    }
</style>

<div class="row">
    <div class="col-sm-12">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">Edit Item</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#tabRack" role="tab" aria-controls="profile" aria-selected="false">Rack</a>
            </li>
        </ul>
        
        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                <div class="col-12 mt-2">
                    <div class="card">
                        <div class="card-header bg-primary">
                            <a href="@Url.Action("index", "Sparepart", new { area = "SCM" })" data-tooltip="Previous Pagge" class="btn btn-sm btn-outline-light mr-2" title="Previous Page">
                                <i class="fa fa-arrow-left"></i>
                            </a>
                            Edit Item Master
                        </div>
                        <div class="card-body">
                            <h5 class="card-title"> </h5>
                            <form action="@Url.Action("EditMasterItem", "Sparepart", new { area = "SCM" })" id="formEditItem" name="formEditItem" enctype="multipart/form-data" method="post">
                                <input type="hidden" name="userRequest" value="" />
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label for="selItem">ITEMID</label>
                                        <input type="text" class="form-control" value="@ViewBag.SparepartDetail.ITEMID" readonly />
                                        <input type="hidden" name="ITEMID" value="@ViewBag.SparepartDetail.ITEMID" />
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label for="selItem">Item Category</label>
                                        <input type="text" class="form-control" value="@ViewBag.SparepartDetail.ProCateName" readonly />
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label for="txtQuantity">Item Name</label>
                                        <input type="text" class="form-control" value="@ViewBag.SparepartDetail.ProductName" readonly>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label for="txtQuantity">Item Group</label>
                                        <input type="text" class="form-control" value="@ViewBag.SparepartDetail.ItemGroup" readonly>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label for="txtQuantity">Item Description</label>
                                        <input type="text" class="form-control" value="@ViewBag.SparepartDetail.ItemDescription" readonly>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label for="txtQuantity">Stock Available</label>
                                        <input type="text" class="form-control" value="@ViewBag.SparepartDetail.Stock" readonly>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label for="txtQuantity">Minimum Quantity</label>
                                        <input type="number" class="form-control" name="MinQty" min="1" value="@ViewBag.SparepartDetail.MinQty" />
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label for="txtQuantity">Maximum Quantity</label>
                                        <input type="number" class="form-control" value="@ViewBag.SparepartDetail.MaxQty" name="MaxQty" min="1" />
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        @*<div class="form-check form-switch">
                                            <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
                                            <label class="form-check-label" for="flexSwitchCheckDefault">Default switch checkbox input</label>
                                        </div>*@

                                    </div>
                                    <div class="form-group col-md-6">
                                        
                                    </div>
                                </div>
                                                                
                                <div class="form-row">
                                    <div class="form-group col-md-3 p4">
                                        <label for="txtQuantity">Lifetime</label>
                                        <input type="number" class="form-control mr-2" name="Lifetime" min="0" value="@ViewBag.SparepartDetail.Lifetime" style="width:70%"/>
                                    </div>
                                    <div class="col-md-3 col-sm-12 p-1">
                                        <div class="form-group border border-secondary rounded rounded-4 p-2">
                                            <label for="txtQuantity"><span class="f4"><strong>Kanri / Non Kanri</strong></span></label>
                                            <div class="form-check">
                                                <input class="form-check-input mr-2" type="radio" name="IsKanri" id="Kanri" value="1" @(ViewBag.SparepartDetail.IsKanri == 1 ? "checked" : "")>
                                                <label class="form-check-label" for="Kanri">
                                                    Kanri
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                <input class="form-check-input  mr-2" type="radio" name="IsKanri" id="NonKanri" value="0" @(ViewBag.SparepartDetail.IsKanri == 0 ? "checked" : "")>
                                                <label class="form-check-label" for="NonKanri">
                                                    Non Kanri
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3 col-sm-12 p-1">
                                        <div class="form-group border-secondary border p-2 rounded rounded-3">
                                            <label for="txtQuantity"><span class="f4"><strong>Local / Import</strong></span></label>
                                            <div class="form-check">
                                                
                                                    <input class="form-check-input mr-2" type="radio" name="IsLocalPart" value="1" id="LocalPart" @(ViewBag.SparepartDetail.IsLocalPart == 1 ? "checked" : "")> 
                                                    <label class="form-check-label" for="flexRadioDefault1">
                                                        Local Part
                                                    </label>
                                                
                                            </div>
                                            <div class="form-check">
                                                <input class="form-check-input mr-2" type="radio" name="IsLocalPart" value="0" id="ImportPart" @(ViewBag.SparepartDetail.IsLocalPart == 0 ? "checked" : "")>
                                                <label class="form-check-label" for="flexRadioDefault2">
                                                    Import Part
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3 col-sm-12 p-1">
                                        <div class="form-group border-secondary border p-2 rounded rounded-4">
                                            <label for="txtQuantity"><span class="f4"><strong>Fast / Slow Moving</strong></span></label>
                                            <div class="form-check">
                                                <input class="form-check-input  mr-2" type="radio" name="IsFastMoving" value="1" id="FastMoving" @(ViewBag.SparepartDetail.IsFastMoving == 1 ? "checked" : "")>
                                                <label class="form-check-label" for="flexRadioDefault1">
                                                    Fast Moving
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                <input class="form-check-input  mr-2" type="radio" name="IsFastMoving" value="0" id="SlowMoving" @(ViewBag.SparepartDetail.IsFastMoving == 0 ? "checked" : "")>
                                                <label class="form-check-label" for="flexRadioDefault2">
                                                    Slow Moving
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                    
                                
                                <div class="form-row">


                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <div class="panel panel-default">
                                            <div class="panel-body">
                                                <div id="drop-area" class="highlight" style="height:100%">
                                                    <label for="fileElem">
                                                        <input type="file" accept="image/*" name="ImageFile" id="fileElem" onchange="handleFiles(this.files)">
                                                        <div class="uploadIcon" style="display:none">
                                                            <i class="fa fa-upload fa-4x" aria-hidden="true"></i>
                                                        </div>
                                                        <div id="gallery">
                                                            
                                                            <a href="#" class="imageItem"><img src="@Url.Content("~/Files/SCM/Sparepart/Images/" + ViewBag.SparepartDetail.Image)" style="display:block" /></a>
                                                        </div>
                                                    </label>
                                                    <div class="controll-panel">
                                                        <div class="item">
                                                            <div id="delete-image"><i class="fa fa-trash" aria-hidden="true"></i></div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="areapaste">
                                                    <input placeholder="press ctrl + v to paste image" id="text" type="text">
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group col-md-6">
                                        <label for="txtQuantity"></label>
                                        @*<a href="#" class="imageItem"><img src="@Url.Content("~/Files/SCM/Sparepart/Images/" + ViewBag.SparepartDetail.Image)" height="200px" /></a>*@
                                    </div>
                                </div>
                        </div>
                        <div class="card-footer">
                            <button type="submit" class="btn btn-primary" id="btnUpdateItem">Update</button>
                            @{ 
                                if (ViewBag.SparepartDetail.IsActive == 0) { 
                                    <button type="reset" id="ActivateSparepart" class="btn btn-success Activation">Activate</button> }
                                else { 
                                    <button type="reset" id="DeactivateSparepart" class="btn btn-danger Activation">Deactivate</button> }
                            }
                                               
                            <a href="@Url.Action("index", "Sparepart", new { area = "SCM" })" class="btn btn-dark">Back</a>
                        </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade show" id="tabRack" role="tabpanel" aria-labelledby="home-tab">
                <div class="col-12 mt-2">
                    <div class="card">
                        <div class="card-header bg-info">
                        <a href="@Url.Action( "index", "Sparepart", new { area = "SCM" })" data-tooltip="Previous Pagge" class="btn btn-sm btn-outline-light mr-2" title="Previous Page">
                            <i class="fa fa-arrow-left"></i>
                        </a>
                        Rack
                        </div>
                        <div class="card-body">
                            <h5 class="card-title"> Add Rackk </h5>
                            <div class="row">
                                <div class="col-12">
                                    <form action="@Url.Action("AddRack", "Sparepart", new { area = "SCM" })" id="formAddRack" name="formAddRack" method="post">

                                        <div class="form-row">
                                            <div class="form-group col-md-5">
                                                <label for="selItem">Rack Name</label>
                                                <input type="text" name="RackName" class="form-control" placeholder="Type Here" required />
                                            </div>
                                            <div class="form-group col-md-6">
                                                <label for="selItem">Rack Description</label>
                                                <input type="text" name="RackLocation" class="form-control" placeholder="Type Here" />
                                            </div>
                                            <div class="form-group col-md-1">
                                                <label for="btnSave">---</label>
                                                <input type="submit" class="form-control btn-primary" id="btnAddRack" value="Save" />
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                            <hr />
                            <span class="clearfix"></span>
                            <h5 class="card-title"> Rack List </h5>
                            <div class="row">
                                <div class="col-12">
                                    <table class="table-sm" id="table"
                                           data-toggle="table"
                                           data-toolbar="#toolbar"
                                           data-ajax="ajaxRequest"
                                           data-query-params="queryParams"
                                           data-click-to-select="true"
                                           data-pagination="true"
                                           data-url="">
                                        <thead>
                                        <th data-field="No">No</th>
                                        <th data-field="RackName">Rack Name</th>
                                        <th data-field="RackLocation" data-sortable="true">Rack Location</th>
                                        <th data-field="edtiButton">Actions</th>
                                        </thead>
                                        <tbody>

                                            <tr>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                            </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- modal form -->
<div id="EditRackModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" action="@Url.Action("EditRack", "Sparepart", new { area = "SCM" })" id="FormUpdateRack" name="FormUpdateRack">
                <div class="modal-header">
                    <h4 class="modal-title">Edit Item Quantity</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="RackName">Rack Name</label>
                        <input name="RackName" type="text" class="form-control" required="required"  />
                    </div>
                    <div class="form-group">
                        <label for="">Rack Description</label>
                        <input name="RackLocation" type="text" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancel" />
                    <input type="Submit" class="btn btn-info" value="Save" id="BtnUpdateRack" />
                    <input type="hidden" id="RackId" name="RackId"/>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- image box modal -->
<div class="modal fade bd-example-modal-lg" id="imagemodal" tabindex="-1" aria-labelledby="my-modalLabel" aria-hidden="true" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
            </div>
            <div class="modal-body">
                <img src="" id="imagepreview" style="width: 750px; height: auto">
            </div>
        </div>
    </div>
</div>
<script>
    $(document).on('click', '.imageItem', function (e) {
        var a = $(this).find('img').attr('src')
        $('#imagepreview').attr('src', a); // here asign the image to the modal when the user click the enlarge link
        $('#imagemodal').modal('show'); // imagemodal is the id attribute assigned to the bootstrap modal, then i use the show function
    });

    var formValidate =
        $("form[name='formAddRack']").validate({
            // Specify validation rules
            rules: {
                // The key name on the left side is the name attribute
                // of an input field. Validation rules are defined
                // on the right side
                RackName: {
                    required: true
                },
            },
            // Specify validation error messages
            messages: {
                RackName: {
                    required: "Please enter quantity"
                },
            },
            // Make sure the form is submitted to the destination defined
            // in the "action" attribute of the form when valid
            submitHandler: function (form) {
                $.ajax({
                    url: $('#formAddRack').attr('action'),
                    type: "POST",
                    cache: false,
                    data: $('#formAddRack').serialize(),
                    dataType: 'json',
                    success: function (json) {
                        if (json.status == 1) {
                            toastr.options.positionClass = 'toast-bottom-right';
                            toastr.success(json.msg);
                            $('#formAddRack').trigger("reset");
                            $('#table').bootstrapTable('refresh', function () {
                                console.log('refresh');
                            })
                        }
                        else {
                            toastr.options.positionClass = 'toast-bottom-left';
                            toastr.error(json.msg);
                        }
                    }
                });
            }
        });

    $('#btnAddRack').click(function (e) {

        formValidate.form();
    });

    $('#formEditItem').on('submit', (function (e) {
        e.preventDefault();
        var formData = new FormData(this);
        $.ajax({
            type: 'POST',
            url: $(this).attr('action'),
            data: formData,
            cache: false,
            contentType: false,
            processData: false,
            success: function (json) {
                toastr.options.positionClass = 'toast-bottom-right';
                toastr.success(json.msg);
            },
            error: function (data) {
                console.log("error");
                console.log(data);
            }
        });
    }));

    function queryParams(params) {

        return params;
    }

    function ajaxRequest(params) {

        $.ajax({
            type: "post",
            url: "@Url.Action("RackList", "Sparepart", new { area = "SCM" })",
            dataType: 'json',
            success: function (items) {
                //console.log(items.notReady);

                params.success({
                    rows: items
                }, null);
            },
            error: function (er) {
                console.log(params.error(er))
                console.log("error", er);
            }
        })
    }

    $(function () {
        $('#table').bootstrapTable({
            exportDataType: "all",
            exportTypes: ['excel', 'pdf'],
            buttonsClass: 'primary',
        })
    });

    //fileElem.onchange = evt => {
    //    const [file] = fileElem.files
    //    if (file) {
    //        document.getElementById("blah").style.setProperty('display', '');
    //        blah.src = URL.createObjectURL(file)
    //    }
    //}

    $(document).on('click', '#BtnEditRack', function (e) {
        var urlString = "@Url.Action("EditRack", "Sparepart", new { area = "SCM" })";
            var id = $(this).data("id");
            $.ajax({
                type: 'GET',
                url: urlString,
                data: { RackId: id },
                success: function (response) {

                    $('#EditRackModal input[name="RackId"]').val(response.item.RackId);
                    $('#EditRackModal input[name="RackName"]').val(response.item.RackName);
                    $('#EditRackModal input[name="RackLocation"]').val(response.RackLocation);
                }
            })
    });

    var formValidateUpdateRack =
        $("form[name='FormUpdateRack']").validate({
            // Specify validation rules
            rules: {
                // The key name on the left side is the name attribute
                // of an input field. Validation rules are defined
                // on the right side
                RackName: {
                    required: true
                },
            },
            // Specify validation error messages
            messages: {
                RackName: {
                    required: "Please enter Rack Name"
                },
            },
            // Make sure the form is submitted to the destination defined
            // in the "action" attribute of the form when valid
            submitHandler: function (form) {
                $.ajax({
                    url: $('#FormUpdateRack').attr('action'),
                    type: "POST",
                    cache: false,
                    data: $('#FormUpdateRack').serialize(),
                    dataType: 'json',
                    success: function (json) {
                        if (json.status == 1) {
                            toastr.options.positionClass = 'toast-bottom-right';
                            toastr.success(json.msg);
                            $('#EditRackModal').modal('toggle');
                            $('#table').bootstrapTable('refresh', function () {
                                console.log('refresh');
                            })
                        }
                        else {
                            toastr.options.positionClass = 'toast-bottom-left';
                            toastr.error(json.msg);
                        }
                    }
                });
            }
        });

    $('#BtnUpdateRack').click(function () {
        validateUpdateQuantity.form();

    });

    $(document).on('click', '#BtnDeleteRack', function (e) {
            e.preventDefault();
            var RackId = $(this).attr("data-id");
            var urlString = "@Url.Action("RemoveRack", "Sparepart", new { area = "SCM" })";
            confirmDelete(urlString, RackId);
        });



    function confirmDelete(Link, id) {
        swal({
            title: "Are you sure?",
            text: "Delete This Rack!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: false,
            closeOnCancel: false
        }, function (isConfirm) {
            if (isConfirm) {
                $.ajax({
                    url: Link,
                    type: "POST",
                    cache: false,
                    dataType: 'json',
                    data: { RackId: id },
                    success: function (json) {
                        if (json.status == 1) {
                            swal("Deleted!", "Your imaginary file has been deleted.", "success");
                            $('#table').bootstrapTable('refresh', function () {
                                console.log('refresh');
                            })
                        } else {
                            swal("Deleted!", "Your imaginary file has been deleted.", "error");
                            $('#table').bootstrapTable('refresh', function () {
                                console.log('refresh');
                            })
                        }
                    },
                    error: function () {
                        swal("Deleted!", Link, "error");
                    }

                })
            } else {
                swal("Cancelled", "Your imaginary file is safe :)", "error");
            }
        });
    }

    // ************************ Drag and drop ***************** //
    var dropArea = document.getElementById("drop-area")
    var fileElem = document.getElementById('fileElem');
    var gallery = document.getElementById('gallery');

    // Prevent default drag behaviors
    ;['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        dropArea.addEventListener(eventName, preventDefaults, false)
        document.body.addEventListener(eventName, preventDefaults, false)
    })

        // Highlight drop area when item is dragged over it
        ;['dragenter', 'dragover'].forEach(eventName => {
            dropArea.addEventListener(eventName, highlight, false)
        })

        ;['dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, unhighlight, false)
        })

    dropArea.addEventListener('DOMNodeInserted', function () {
        $('.uploadIcon').css('display', 'none');
        if ($('#gallery').children().length > 1) {
            $('#gallery').children().first().remove();
        }
    });

    // Handle dropped files
    dropArea.addEventListener('drop', handleDrop, false)

    function preventDefaults(e) {
        e.preventDefault()
        e.stopPropagation()
    }

    function highlight(e) {
        dropArea.classList.add('highlight');
    }

    function unhighlight(e) {
        dropArea.classList.remove('active');
    }

    function handleDrop(e) {
        var dt = e.dataTransfer
        var files = dt.files
        handleFiles(files)
    }

    function handleFiles(files) {
        files = [...files]
        files.forEach(previewFile)
    }

    function previewFile(file) {
        var reader = new FileReader();
        reader.onloadend = function () {
            dropArea.style.height = '100%';
            let img = document.createElement('img');
            img.src = reader.result
            gallery.appendChild(img);
            setDataForImage(file);

        }
        reader.readAsDataURL(file);
    }
    $(document).ready(function () {

    });

    //********************paste********************//
    var input = document.querySelector("#text");
    input.addEventListener("paste", function (event) {
        var items = (event.clipboardData || event.originalEvent.clipboardData).items;
        for (index in items) {
            var item = items[index];
            if (item.kind === 'file') {
                var blob = item.getAsFile();
                var reader = new FileReader();
                reader.onload = function (event) {
                    let img = document.createElement('img')
                    img.src = event.target.result
                    document.getElementById('gallery').appendChild(img);
                    setDataForImage(blob);
                };
                reader.readAsDataURL(blob);
            }
        }
    });

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#image_upload_preview').attr('src', e.target.result);
                setDataForImage(e.target);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    function setDataForImage(file) {
        var nameImage = $('#nameImage');
        var sizeImage = $('#sizeImage');
        var typeImage = $('#typeImage');
        var timemodifiImage = $('#timemodifiImage');
        var datemodifiImage = $('#datemodifiImage');
        console.log('file', file);
        nameImage.text(file.name);
        sizeImage.text(file.size);
        typeImage.text(file.type);
        timemodifiImage.text(file.lastModified);
        datemodifiImage.text(file.lastModifiedDate);
    }

    var saveImageBtn = $('#save-image');
    var containerImage = $('#container-image');

    var count = 0;
    saveImageBtn.click(function () {
        var image = $('#gallery').children().first();
        var getImage = image[0].getAttribute('src');
        //    $('#output').html(function(i, val) { return val*1+1 });

        if (getImage != null) {
            var containerBox = document.createElement('div');
            containerBox.style.width = "200px";
            containerBox.style.display = 'inline-block';
            containerBox.style.padding = "5px";

            var img = document.createElement('img');
            img.src = getImage;
            img.style.width = "100%";

            containerBox.classList = 'conteiner';
            containerBox.id = 'item_' + count++;
            containerBox.style.position = 'relative';

            var btnDelete = document.createElement('div');
            btnDelete.style.position = 'absolute';
            btnDelete.style.width = "20px";
            btnDelete.style.height = "20px";
            btnDelete.style.borderRadius = "50%";
            btnDelete.style.top = "-10px";
            btnDelete.style.right = "-10px";
            btnDelete.style.background = "#f2f2f2";
            btnDelete.id = 'itemDelete';
            btnDelete.style.zIndex = "999999";

            containerBox.append(btnDelete)
            containerBox.append(img)
            containerImage.append(containerBox);
        } else {
            console.log('нечего сохранять');
        }
    });

    var deleteImageBtn = $('#delete-image');
    deleteImageBtn.click(function () {
        var image = $('#gallery').children().first().remove();
        $('.uploadIcon').css('display', 'block');
        dropArea.style.height = '400px';
    });

    //document.getElementById('container-image').addEventListener('DOMNodeInserted', function () {
    //    $('#container-image').children().each(function (key, elem) {
    //        $('#' + elem.getAttribute('id')).click(function () {
    //            $('#gallery').children().first().remove();
    //            var file = dataURLtoFile($(this).find('img').attr('src'));
    //            previewFile(file);
    //        });
    //        var deleteBtn = $('#' + elem.getAttribute('id')).find('#itemDelete');
    //        deleteBtn.click(function () {
    //            $('#' + elem.getAttribute('id')).remove();
    //        });
    //    });
    //});


    function dataURLtoFile(dataurl, filename) {
        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],
            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);
        while (n--) {
            u8arr[n] = bstr.charCodeAt(n);
        }
        return new File([u8arr], filename, { type: mime });
    }

    function Activation(id, action, Link) {
        swal({
            title: "Are you sure?",
            text: action + " This Item ?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, " + action + " it!",
            closeOnConfirm: false,
            closeOnCancel: false
        }, function (isConfirm) {
            if (isConfirm) {
                $.ajax({
                    url: Link,
                    type: "POST",
                    cache: false,
                    dataType: 'json',
                    data: { ITEMID: id, action : action },
                    success: function (json) {
                        if (json.status == 1) {
                            swal({ title: action + " !", text: "Update Success.", type: "success" },
                                function () {
                                location.reload();
                            });
                            
                        } else {
                            swal(action + "!", "Update Success.", "error");
                        }
                    },
                    error: function () {
                        swal(action + "!", Link, "error");
                    }
                })
            } else {
                swal("Cancelled", "update Cancelled", "error");
            }
        });
    }

    $(document).on('click', '#ActivateSparepart, #DeactivateSparepart', function (e) {
        e.preventDefault();
        var itemid = "@ViewBag.SparepartDetail.ITEMID";
        var link =  "@Url.Action("UpdateActivation", "Sparepart", new { area = "SCM" })";
        if ($(this).attr('id') == 'ActivateSparepart') {
            Activation(itemid, "Activate", link);
        }
        if ($(this).attr('id') == 'DeactivateSparepart') {
            Activation(itemid, "Deactivate", link);
        }
    });
</script>
