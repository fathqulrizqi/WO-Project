<!doctype html>
@{

    ViewBag.Title = "Checker Data";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var currUser = ViewBag.CurrUser;
}

<title>Fresh Bootstrap Table by Creative Tim</title>
<!-- Canonical SEO -->
@*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/css/bootstrap.min.css">*@
@*<link href="@Url.Content("~/Content/fresh-bootstrap-table/css/fresh-bootstrap-table.css")" rel="stylesheet" />*@
<link href="@Url.Content("~/Content/datepicker/datepicker.css")" rel="stylesheet" />
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
<link href="@Url.Content("~/Content/bootstrap-table/bootstrap-table.min.css")" rel="stylesheet">
<!--   Fonts and icons   -->
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
<link href="http://fonts.googleapis.com/css?family=Roboto:400,700,300" rel="stylesheet" type="text/css">

@*<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"></script>*@
<script src="@Url.Content("~/Content/bootstrap-table/bootstrap-table.min.js")"></script>
<script src="https://unpkg.com/bootstrap-table@1.21.0/dist/extensions/toolbar/bootstrap-table-toolbar.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/tableexport.jquery.plugin@1.10.21/tableExport.min.js"></script>
<script src="https://unpkg.com/bootstrap-table@1.21.0/dist/extensions/export/bootstrap-table-export.min.js"></script>
<script src="https://unpkg.com/bootstrap-table@1.21.0/dist/extensions/filter-control/bootstrap-table-filter-control.min.js"></script>
<script src="@Url.Content("~/Content/datepicker/datepicker.js")"></script>

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>



<style>
    .card {
        /*border-top-left-radius: 2em;
        border-top-right-radius: 2em;*/
        text-align: center;
        box-shadow: 0 5px 10px rgba(0,0,0,.2);
    }

        .card .card-header {
            /*border-top-left-radius: inherit;
        border-top-right-radius:inherit;*/
            text-align: center;
            color: white;
            font-weight: bold;
            font-size: medium;
            box-shadow: inset;
        }

    .notification {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background: #25D366;
        color: white;
        padding: 15px;
        border-radius: 10px;
        font-size: 16px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        z-index: 1000;
        display: none;
    }
</style>

<div class="row">    
    <div class="col-lg-12">
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".bs-example-modal-lg"><i class="fa fa-plus"></i> Add New Sending Card</button>
        @*<div class="card">
            <div class="card-header bg-info">Add New Sending Card</div>
        </div>*@
    </div>
</div>
<div class="row mt-2">
    <div class="col-12" id="notification-container"></div>
    <button id="enableSoundButton" onclick="enableNotificationSound()" style="display: none;">Aktifkan Notifikasi Suara</button>
    <!-- Audio element untuk memainkan suara notifikasi -->
    <audio id="notificationSound" src="~/Files/SCM/Sparepart/Audio/alert-1931.wav" preload="auto"></audio>
    <div class="col-12">
        <div class="card">
            <div class="card-header bg-info">Sending Card List</div>
            <div class="card-body">
                <div class="row p-2">
                    <div class="col-lg-12">
                        @{
                            string dateFrom = Session["startDate"] as string;
                            string dateTo = Session["endDate"] as string;
                            string statusFilter = Session["status"] as string;
                            int status = Convert.ToInt32(ViewBag.statusFilter);
                        }
                        <form action="@Url.Action("RequestData", "Sparepart", new { area = "SCM" })" method="post" id="formFilter">
                            <div class="form-group row">
                                <label for="dateRange" class="col-md-2 col-form-label">Select Periode</label>
                                <div class="col-md-4">
                                    <input type="text" class="form-control dateFrom" id="dateRange" name="dateFrom" placeholder="select date" required>

                                </div>
                                To
                                <div class="col-md-4">
                                    <input type="text" class="form-control dateTo" id="dateRange" name="dateTo" placeholder="select date" required>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-md-4">
                                    <input type="button" class="btn btn-info col-10" id="findData" value="Find Data" />
                                </div>
                            </div>
                        </form>
                        <div id="toolbar">
                            <button id="process" class="btn btn-warning btn_prepare" disabled style="display:none">Prepare Selected</button>
                        </div>
                        <table id="fresh-table"
                                data-toolbar="#toolbar"
                                data-click-to-select="true"
                                data-detail-view="true"
                                data-detail-view-icon="true"
                                data-detail-view-by-click="false"
                                data-detail-formatter="detailFormatter"
                                data-ajax="ajaxRequest"
                                data-query-params="queryParams"
                                class="table table-hover">
                            <thead>
                                <th data-field="NoTrans">No Trans</th>
                                <th data-field="SendingCard" data-sortable="true">Item</th>
                                <th data-field="TotalQuantity" data-sortable="true">Total Quantity</th>
                                <th data-field="CreateTime" data-sortable="true">Create Time</th>
                                <th data-field="CreateBy" data-sortable="true" data-filter-type="datepicker_range">Create By</th>                                
                            </thead>
                        </table>
                    </div>

                </div>
            </div>
        </div>
    </div>

</div>
  

@* bootstrap modal *@
<div class="modal fade bs-example-modal-lg" id="sendingCardModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                @*<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>*@
                <h4 class="modal-title" id="exampleModalLabel">New Sending Card</h4>
            </div>
            <div class="modal-body">
                <form name="fNewSendingCard" method="post" id="formNewSendingCard">
                    <div class="form-group">
                        @*<label for="recipient-name" class="control-label">Sending Card:</label>*@
                        <input type="text" class="form-control" name="scanInput" id="tScanInput" placeholder="Scan Here">
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="control-label">Item</label>
                        <input type="text" class="form-control" name="SendingCard" id="tSendingCard" readonly/>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="control-label">Quantity Request</label>
                        <input type="text" class="form-control" name="TotalQuantity" id="tQty"/>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btnSubmit">Submit</button>
            </div>
        </div>
    </div>
</div>
@* end bootstrap modal *@

    <script src="@Url.Content("~/Scripts/jquery.signalR-2.4.3.min.js")"></script>
    <script src="@Url.Content("~/signalr/js")"></script>

    <script>
    jQuery(function ($) {
        $('#sendingCardModal').on('shown.bs.modal', function () {
            $('input[name="scanInput"]').focus();
            $('input[name="SendingCard"]').val("");
            $('input[name="TotalQuantity"]').val("");
        });
    });

    $(document).ready(function () {
        $('#tScanInput').on('keypress', function (e) {
            if (e.which === 13) {
                console.log("test");
                // Deteksi Enter key
                let scannedText = $(this).val().trim();

                // Ambil bagian setelah titik (.) dan sebelum spasi pertama
                let match1 = scannedText.match(/\.(\S+?)\s+/);
                let value1 = match1 ? match1[1] : "";

                // Ambil bagian kedua setelah kode awal
                let secondPartMatch = scannedText.match(/\s(IZ\S+)/);
                let secondPart = secondPartMatch ? secondPartMatch[1] : "";

                // Ambil karakter ke-20 sampai sebelum spasi pada bagian kedua
                let value2 = secondPart.length >= 21 ? secondPart.substring(20).split(" ")[0] : "";

                // Isi textbox
                $('#tSendingCard').val(value1);
                $('#tScanInput').val("");
                $('#tQty').val("").focus();

                // Clear scan input
                //$('#tScanInput').val("").focus();
            }
        });
    });

    var $process = $('#process');
    var $table = $('#fresh-table');

    $(function () {
        $('#fresh-table').bootstrapTable({
            exportDataType: "all",
            exportTypes: ['excel', 'pdf'],
            buttonsClass: 'primary',
        })
    });

    $(function () {
        //$('.selectpicker').selectpicker();

        $(document).on('click', '#findData', function (e) {

            $('#fresh-table').bootstrapTable('refresh', function () {
                console.log('tes');
            });
        });

        /* posting journal */
        $(document).on('click', '#btnSubmit', function (e) {
            e.preventDefault();
            
            var urlString = "@Url.Action("ProcessPostingJournal", "MITtransferBNGK", new { area = "SCM" })";

            $.ajax({
                type: "post",
                url: "@Url.Action("AddSendingCard", "WHKD", new { area = "SCM" })",
                dataType: 'json',
                data: $('#formNewSendingCard').serialize(),
                success: function (json) {
                    $('#fresh-table').bootstrapTable('refresh');
                    $('#sendingCardModal').modal('toggle');
                },
                error: function (er) {
                    console.log(params.error(er))
                    console.log("error", er);
                }
            });
        });
    });

    function queryParams(params) {

        return params;
    }

    function ajaxRequest(params) {
        var RequestNo = "@(ViewBag.RequestNo)";
        $.ajax({
            type: "post",
            url: "@Url.Action("GetCheckerData", "WHKD", new { area = "SCM" })",
            dataType: 'json',
            data: $('#formFilter').serialize(),
            success: function (items) {

                params.success({
                    rows: items.checkerList
                }, null);
            },
            error: function (er) {
                console.log(params.error(er))
                console.log("error", er);
            }
        })
    }

    @*function detailFormatter(index, row) {
        var requestNo = row.RequestNo;
        var data = getItemList(requestNo);

        console.log(data);
        return data;

        //var html = []
        //$.each(row, function (key, value) {
        //    html.push('<p><b>' + key + ':</b> ' + value + '</p>')
        //})
        //html.join('')
    }

    function getItemList(requestNo) {
        var Link = "@Url.Action("ItemListRequest", "Sparepart", new { area = "SCM" })";
        var html = "";
        html += "<table class='table table-sm table-primary'>";
        html += "<thead class='thead-light '>"
        html += "<tr>";
        html += "<th>No.</th>";
        html += "<th>Item Name</th>";
        html += "<th>Item Name</th>";
        html += "<th>Quantity Request</th>";
        html += "</tr>";
        html += "</thead>";
        html += "<tbody>";

        $.ajax({
            url: Link,
            type: "POST",
            dataType: "json",
            data: { RequestNo: requestNo, status: 1 },
            async: false,
            success: function (json) {
                if (json.status == 1) {

                    var len = json.rows.length;

                    if (len > 0) {
                        var NO = 1;
                        for (var i = 0; i < len; i++) {

                            if (json.rows[i].ITEMID) {

                                html += "<tr class='table-success'>"
                                html += "<td>" + NO + "</td>"
                                html += "<td>" + json.rows[i].ITEMID + "</td>"
                                html += "<td>" + json.rows[i].ProductName + "</td>"
                                html += "<td>" + json.rows[i].Quantity + "</td>"
                                html += "</tr>";

                            }
                            NO++;
                        }
                    }
                }
            }
        });
        html += "</body>";
        html += "</table>";
        return (html);
    }*@
    </script>



